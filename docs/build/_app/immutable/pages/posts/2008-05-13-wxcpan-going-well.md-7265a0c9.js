import{S as j,i as q,s as F,D as U,x as H,y as O,z as V,A as J,B,r as K,p as Q,C as X,V as D,e as d,t as h,k as E,c as v,a as g,h as w,d as o,m as k,b as z,g as i,F as m,n as Z}from"../../chunks/index-f095e7d9.js";import{P as ee}from"../../chunks/post-34b2f3fb.js";function te(P){let t,r,c,n,a=`<code class="language-perl">perl <span class="token operator">-</span>MCPANPLUS <span class="token operator">-e</span> <span class="token string">'shell(Wx)'</span></code>`,l,p,A,S,u,$,x,I,b,C,_,L,f,N;return{c(){t=d("p"),r=h("I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),c=E(),n=d("pre"),l=E(),p=d("p"),A=h("I have created a perl script for testing this."),S=E(),u=d("p"),$=h("I have also created a new svn branch, "),x=d("code"),I=h("development"),b=h(". This is the current working branch."),C=E(),_=d("p"),L=h("You can view or download my current development code, via svn. "),f=d("a"),N=h(`See the googlecode
svn repo here`),this.h()},l(e){t=v(e,"P",{});var s=g(t);r=w(s,"I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),s.forEach(o),c=k(e),n=v(e,"PRE",{class:!0});var R=g(n);R.forEach(o),l=k(e),p=v(e,"P",{});var Y=g(p);A=w(Y,"I have created a perl script for testing this."),Y.forEach(o),S=k(e),u=v(e,"P",{});var y=g(u);$=w(y,"I have also created a new svn branch, "),x=v(y,"CODE",{});var T=g(x);I=w(T,"development"),T.forEach(o),b=w(y,". This is the current working branch."),y.forEach(o),C=k(e),_=v(e,"P",{});var G=g(_);L=w(G,"You can view or download my current development code, via svn. "),f=v(G,"A",{href:!0,rel:!0});var W=g(f);N=w(W,`See the googlecode
svn repo here`),W.forEach(o),G.forEach(o),this.h()},h(){z(n,"class","language-perl"),z(f,"href","http://code.google.com/p/wxcpan/source/browse"),z(f,"rel","nofollow")},m(e,s){i(e,t,s),m(t,r),i(e,c,s),i(e,n,s),n.innerHTML=a,i(e,l,s),i(e,p,s),m(p,A),i(e,S,s),i(e,u,s),m(u,$),m(u,x),m(x,I),m(u,b),i(e,C,s),i(e,_,s),m(_,L),m(_,f),m(f,N)},p:Z,d(e){e&&o(t),e&&o(c),e&&o(n),e&&o(l),e&&o(p),e&&o(S),e&&o(u),e&&o(C),e&&o(_)}}}function ae(P){let t,r;const c=[P[0],M];let n={$$slots:{default:[te]},$$scope:{ctx:P}};for(let a=0;a<c.length;a+=1)n=U(n,c[a]);return t=new ee({props:n}),{c(){H(t.$$.fragment)},l(a){O(t.$$.fragment,a)},m(a,l){V(t,a,l),r=!0},p(a,[l]){const p=l&1?J(c,[l&1&&B(a[0]),l&0&&B(M)]):{};l&2&&(p.$$scope={dirty:l,ctx:a}),t.$set(p)},i(a){r||(K(t.$$.fragment,a),r=!0)},o(a){Q(t.$$.fragment,a),r=!1},d(a){X(t,a)}}}const M={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"wxCPAN Going Well",description:"wxCPAN Going Well",excerpt:"I have successfully managed to implement a CPANPLUS::Shell.",cover:!1,coverImage:"/images/GSoC-logo-horizontal-800.png",coverAlt:"RBE Logo",categories:["perl"],tags:["gSoC"],created_at:"2008-05-13 14:56",updated_at:"2008-05-13 14:56",meta:[{property:"og:image",content:"/images/GSoC-logo-horizontal-800.png"},{name:"twitter:image",content:"/images/GSoC-logo-horizontal-800.png"}]};function oe(P,t,r){return P.$$set=c=>{r(0,t=U(U({},t),D(c)))},t=D(t),[t]}class ne extends j{constructor(t){super(),q(this,t,oe,ae,F,{})}}export{ne as default,M as metadata};
