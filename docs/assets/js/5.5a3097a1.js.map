{"version":3,"sources":["webpack:///src/.vuepress/theme/components/Time/Provider.vue","webpack:///./node_modules/time-ago/timeago.js","webpack:///./src/.vuepress/theme/components/Time/Provider.vue","webpack:///./src/.vuepress/theme/components/Time/Provider.vue?f980","webpack:///./src/.vuepress/theme/components/Time/locales lazy ^\\.\\/.*\\.js$ namespace object"],"names":[],"mappings":";;;;;;;;;;;;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI,KAA6B;AACjC;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAC4D;AACL;;;AAGvD;AACmG;AACnG,gBAAgB,2GAAU;AAC1B,EAAE,8EAAM;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;AClBf;AAAA;AAAA,wCAAmM,CAAgB,mPAAG,EAAC,C;;;;;;;;;;;ACAvN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC","file":"assets/js/5.5a3097a1.js","sourcesContent":["<script>\n  const timeago = require('time-ago')\n\n  export default {\n    name: 'TimeProvider',\n\n    props: {\n      type: {\n        type: String,\n        required: true\n      },\n      date: {\n        type: [Date, String],\n        default () {\n          return new Date()\n        }\n      },\n      content: String,\n      lang: String\n    },\n\n    data () {\n      return {\n        result: null\n      }\n    },\n\n    created () {\n      const data = this.content || (this.date instanceof Date ? this.date : new Date(this.date))\n      import(`@theme/components/Time/locales/${this.lang || this.$lang}.js`).then(module => {\n        this.result = this.translate(this.handle(data), module.default)\n      }).catch(() => {\n        this.result = this.handle(data)\n      })\n    },\n\n    methods: {\n      translate (result, translate) {\n        Object.keys(translate).forEach(key => {\n          let regex = new RegExp(key, 'i')\n          if (result.match(regex)) {\n            result = result.replace(key, translate[key])\n          }\n        })\n        return result\n      },\n\n      handle (data) {\n        return this.type === 'mintoread' ? timeago[this.type](data, null, 100) : timeago[this.type](data)\n      }\n    },\n\n    render () {\n      return this.$scopedSlots.default({\n        time: this.result\n      })\n    }\n  }\n</script>\n","\"use strict\";\n\nvar timeago = function() {\n\n  var o = {\n    second: 1000,\n    minute: 60 * 1000,\n    hour: 60 * 1000 * 60,\n    day: 24 * 60 * 1000 * 60,\n    week: 7 * 24 * 60 * 1000 * 60,\n    month: 30 * 24 * 60 * 1000 * 60,\n    year: 365 * 24 * 60 * 1000 * 60\n  };\n  var obj = {};\n\n  obj.ago = function(nd, s) {\n    var r = Math.round,\n        dir = ' ago',\n      pl = function(v, n) {\n        return (s === undefined) ? n + ' ' + v + (n > 1 ? 's' : '') + dir : n + v.substring(0, 1)\n      },\n      ts = Date.now() - new Date(nd).getTime(),\n      ii;\n    if( ts < 0 )\n    {\n      ts *= -1;\n      dir = ' from now';\n    }\n    for (var i in o) {\n      if (r(ts) < o[i]) return pl(ii || 'm', r(ts / (o[ii] || 1)))\n      ii = i;\n    }\n    return pl(i, r(ts / o[i]));\n  }\n\n  obj.today = function() {\n    var now = new Date();\n    var Weekday = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\");\n    var Month = new Array(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\");\n    return Weekday[now.getDay()] + \", \" + Month[now.getMonth()] + \" \" + now.getDate() + \", \" + now.getFullYear();\n  }\n\n  obj.timefriendly = function(s) {\n    var t = s.match(/(\\d).([a-z]*?)s?$/);\n    return t[1] * eval(o[t[2]]);\n  }\n\n  obj.mintoread = function(text, altcmt, wpm) {\n    var m = Math.round(text.split(' ').length / (wpm || 200));\n    return (m || '< 1') + (altcmt || ' min to read');\n  }\n\n  return obj;\n}\n\nif (typeof module !== 'undefined' && module.exports)\n  module.exports = timeago();\n","var render, staticRenderFns\nimport script from \"./Provider.vue?vue&type=script&lang=js&\"\nexport * from \"./Provider.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Provider.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Provider.vue?vue&type=script&lang=js&\"","var map = {\n\t\"./es.js\": [\n\t\t\"./src/.vuepress/theme/components/Time/locales/es.js\",\n\t\t86\n\t],\n\t\"./pt-br.js\": [\n\t\t\"./src/.vuepress/theme/components/Time/locales/pt-br.js\",\n\t\t87\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/.vuepress/theme/components/Time/locales lazy recursive ^\\\\.\\\\/.*\\\\.js$\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}