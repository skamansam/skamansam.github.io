import{S as fr,i as cr,s as dr,D as zs,x as yr,y as hr,z as vr,A as wr,B as pr,r as br,p as _r,C as gr,L as mr,e as r,t as l,k as m,c as a,a as n,h as p,d as i,m as u,b as f,g as s,I as o,n as Er}from"../../chunks/index-fb0fe4b0.js";import{P as Cr}from"../../chunks/post-72541c77.js";function Pr(ae){let c,v,w,h,d,y,b,mt,$e,g,ut,Ue,E,ft,Qe,ne,ct,Xe,C,dt,Ze,P,yt,Ke,S,ht,Ve,le,vt,Ye,A,wt,ei,pe,bt,ii,H,_t,ti,me,gt,si,ue,Et,oi,_,fe,k,Ct,Pt,St,ce,I,At,Ht,kt,de,D,It,Dt,ri,ye,Nt,ai,N,Tt,ni,he,xt,li,T,Lt,pi,ve,Bt,mi,x,qt,ui,we,Ft,fi,L,jt,ci,be,zt,di,B,Ot,yi,_e,Mt,hi,q,Gt,vi,ge,Wt,wi,F,Jt,bi,Ee,Rt,_i,j,$t,gi,Ce,Ut,Ei,z,Qt,Ci,Pe,Xt,Pi,O,Zt,Si,Se,Kt,Ai,M,Vt,Hi,Ae,Yt,ki,G,es,Ii,He,is,Di,W,ts,Ni,ke,ss,Ti,J,os,xi,Ie,rs,Li,R,as,Bi,De,ns,qi,$,ls,Fi,Ne,ps,ji,U,ms,zi,Te,us,Oi,Q,fs,Mi,xe,cs,Gi,X,ds,Wi,Le,ys,Ji,Z,hs,Ri,Be,vs,$i,K,ws,Ui,qe,bs,Qi,V,_s,Xi,Fe,gs,Zi,Y,Es,Ki,je,Cs,Vi,ee,Ps,Yi,ze,Ss,et,ie,As,it,Oe,Hs,tt,te,ks,st,Me,Is,ot,se,Ds,rt,Ge,Ns,at,oe,Ts,nt,We,xs,lt,re,Ls,pt,Je,Bs;return{c(){c=r("p"),v=l(`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic \u201COutside the Browser\u201D`),w=m(),h=r("h2"),d=l("General Programming Courses"),y=m(),b=r("h2"),mt=l("Graphics"),$e=m(),g=r("h2"),ut=l("Algorithms"),Ue=m(),E=r("h3"),ft=l("230 Elementary Data Structures and Algorithms"),Qe=m(),ne=r("p"),ct=l(`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Xe=m(),C=r("h2"),dt=l("Networking"),Ze=m(),P=r("h2"),yt=l("Math-Based Courses"),Ke=m(),S=r("h3"),ht=l("250 Foundations of Computer Science I"),Ve=m(),le=r("p"),vt=l(`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Ye=m(),A=r("h2"),wt=l("Hardware"),ei=m(),pe=r("p"),bt=l("These classes are designed to teach specific hardware concepts"),ii=m(),H=r("h3"),_t=l("261 Computer Organization and Assembly Language"),ti=m(),me=r("p"),gt=l(`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),si=m(),ue=r("p"),Et=l(`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. \xA0Here are a few online
interpreters of interest for this classJS:`),oi=m(),_=r("ul"),fe=r("li"),k=r("a"),Ct=l("JSAssembly"),Pt=l(" - an interpeter for x86 assembly codes"),St=m(),ce=r("li"),I=r("a"),At=l("JSNES"),Ht=l(" - Great working interpreter for SNES ROM images"),kt=m(),de=r("li"),D=r("a"),It=l("6502asm"),Dt=l(" - 6502 assembly code interpreter"),ri=m(),ye=r("p"),Nt=l(`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),ai=m(),N=r("h2"),Tt=l("Outside the Browser"),ni=m(),he=r("p"),xt=l("These courses are designed to teach specific software, and"),li=m(),T=r("h3"),Lt=l("330 Advanced Data Structures"),pi=m(),ve=r("p"),Bt=l("Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),mi=m(),x=r("h3"),qt=l("339 Concepts of Programming Languages"),ui=m(),we=r("p"),Ft=l("Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),fi=m(),L=r("h3"),jt=l("340 Software Engineering"),ci=m(),be=r("p"),zt=l("Practical and theoretical concepts of software engineering."),di=m(),B=r("h3"),Ot=l("350 Foundations of Computer Science II"),yi=m(),_e=r("p"),Mt=l("High level concepts in the theoretical foundations of computer science."),hi=m(),q=r("h3"),Gt=l("463 Basic Systems Administration Laboratory"),vi=m(),ge=r("p"),Wt=l("Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),wi=m(),F=r("h3"),Jt=l("464 Intermediate Systems Administration Laboratory"),bi=m(),Ee=r("p"),Rt=l("Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),_i=m(),j=r("h3"),$t=l("465 Advanced Systems Administration Laboratory"),gi=m(),Ce=r("p"),Ut=l("Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),Ei=m(),z=r("h3"),Qt=l("471 Principles of Database Systems"),Ci=m(),Pe=r("p"),Xt=l("Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),Pi=m(),O=r("h3"),Zt=l("490 Senior Project"),Si=m(),Se=r("p"),Kt=l("Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),Ai=m(),M=r("h3"),Vt=l("493 Honors Work in Computer Science"),Hi=m(),Ae=r("p"),Yt=l("Research in a topic of special interest at the Honors level."),ki=m(),G=r("h3"),es=l("495 Selected Topics in Computer Science"),Ii=m(),He=r("p"),is=l(`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),Di=m(),W=r("h3"),ts=l("521 Computer Graphics"),Ni=m(),ke=r("p"),ss=l("Survey of graphics algorithms, data structures, and techniques."),Ti=m(),J=r("h3"),os=l("522 Digital Image Processing"),xi=m(),Ie=r("p"),rs=l("Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),Li=m(),R=r("h3"),as=l("523 Numerical Analysis and Computing"),Bi=m(),De=r("p"),ns=l("Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),qi=m(),$=r("h3"),ls=l("524 Numerical Analysis and Computing"),Fi=m(),Ne=r("p"),ps=l("Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),ji=m(),U=r("h3"),ms=l("526 Bioinformatics"),zi=m(),Te=r("p"),us=l("Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),Oi=m(),Q=r("h3"),fs=l("529 Artificial Intelligence"),Mi=m(),xe=r("p"),cs=l("Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),Gi=m(),X=r("h3"),ds=l("539 Introduction to Compiler Design"),Wi=m(),Le=r("p"),ys=l("Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Ji=m(),Z=r("h3"),hs=l("540 Human-Computer Interface Development"),Ri=m(),Be=r("p"),vs=l("Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),$i=m(),K=r("h3"),ws=l("550 Combinatorics on Words"),Ui=m(),qe=r("p"),bs=l("Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),Qi=m(),V=r("h3"),_s=l("553 Theory of Computation"),Xi=m(),Fe=r("p"),gs=l("Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Zi=m(),Y=r("h3"),Es=l("555 Algorithm Analysis and Design"),Ki=m(),je=r("p"),Cs=l("Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Vi=m(),ee=r("h3"),Ps=l("561 Principles of Computer Architecture"),Yi=m(),ze=r("p"),Ss=l("Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),et=m(),ie=r("h3"),As=l("562 Principles of Operating Systems"),it=m(),Oe=r("p"),Hs=l("Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),tt=m(),te=r("h3"),ks=l("567 Principles of Computer Networks"),st=m(),Me=r("p"),Is=l("Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),ot=m(),se=r("h3"),Ds=l("568 Principles of Wireless Networks"),rt=m(),Ge=r("p"),Ns=l("Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),at=m(),oe=r("h3"),Ts=l("580 Cryptography and Security in Computing"),nt=m(),We=r("p"),xs=l("Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),lt=m(),re=r("h3"),Ls=l("583 Firewall Architecture and Computer Security"),pt=m(),Je=r("p"),Bs=l("Firewall hardware and software technologies. Architectures, protocols and their applications."),this.h()},l(e){c=a(e,"P",{});var t=n(c);v=p(t,`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic \u201COutside the Browser\u201D`),t.forEach(i),w=u(e),h=a(e,"H2",{id:!0});var Os=n(h);d=p(Os,"General Programming Courses"),Os.forEach(i),y=u(e),b=a(e,"H2",{id:!0});var Ms=n(b);mt=p(Ms,"Graphics"),Ms.forEach(i),$e=u(e),g=a(e,"H2",{id:!0});var Gs=n(g);ut=p(Gs,"Algorithms"),Gs.forEach(i),Ue=u(e),E=a(e,"H3",{id:!0});var Ws=n(E);ft=p(Ws,"230 Elementary Data Structures and Algorithms"),Ws.forEach(i),Qe=u(e),ne=a(e,"P",{});var Js=n(ne);ct=p(Js,`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Js.forEach(i),Xe=u(e),C=a(e,"H2",{id:!0});var Rs=n(C);dt=p(Rs,"Networking"),Rs.forEach(i),Ze=u(e),P=a(e,"H2",{id:!0});var $s=n(P);yt=p($s,"Math-Based Courses"),$s.forEach(i),Ke=u(e),S=a(e,"H3",{id:!0});var Us=n(S);ht=p(Us,"250 Foundations of Computer Science I"),Us.forEach(i),Ve=u(e),le=a(e,"P",{});var Qs=n(le);vt=p(Qs,`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Qs.forEach(i),Ye=u(e),A=a(e,"H2",{id:!0});var Xs=n(A);wt=p(Xs,"Hardware"),Xs.forEach(i),ei=u(e),pe=a(e,"P",{});var Zs=n(pe);bt=p(Zs,"These classes are designed to teach specific hardware concepts"),Zs.forEach(i),ii=u(e),H=a(e,"H3",{id:!0});var Ks=n(H);_t=p(Ks,"261 Computer Organization and Assembly Language"),Ks.forEach(i),ti=u(e),me=a(e,"P",{});var Vs=n(me);gt=p(Vs,`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),Vs.forEach(i),si=u(e),ue=a(e,"P",{});var Ys=n(ue);Et=p(Ys,`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. \xA0Here are a few online
interpreters of interest for this classJS:`),Ys.forEach(i),oi=u(e),_=a(e,"UL",{});var Re=n(_);fe=a(Re,"LI",{});var qs=n(fe);k=a(qs,"A",{href:!0,rel:!0});var eo=n(k);Ct=p(eo,"JSAssembly"),eo.forEach(i),Pt=p(qs," - an interpeter for x86 assembly codes"),qs.forEach(i),St=u(Re),ce=a(Re,"LI",{});var Fs=n(ce);I=a(Fs,"A",{href:!0,rel:!0});var io=n(I);At=p(io,"JSNES"),io.forEach(i),Ht=p(Fs," - Great working interpreter for SNES ROM images"),Fs.forEach(i),kt=u(Re),de=a(Re,"LI",{});var js=n(de);D=a(js,"A",{href:!0,rel:!0});var to=n(D);It=p(to,"6502asm"),to.forEach(i),Dt=p(js," - 6502 assembly code interpreter"),js.forEach(i),Re.forEach(i),ri=u(e),ye=a(e,"P",{});var so=n(ye);Nt=p(so,`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),so.forEach(i),ai=u(e),N=a(e,"H2",{id:!0});var oo=n(N);Tt=p(oo,"Outside the Browser"),oo.forEach(i),ni=u(e),he=a(e,"P",{});var ro=n(he);xt=p(ro,"These courses are designed to teach specific software, and"),ro.forEach(i),li=u(e),T=a(e,"H3",{id:!0});var ao=n(T);Lt=p(ao,"330 Advanced Data Structures"),ao.forEach(i),pi=u(e),ve=a(e,"P",{});var no=n(ve);Bt=p(no,"Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),no.forEach(i),mi=u(e),x=a(e,"H3",{id:!0});var lo=n(x);qt=p(lo,"339 Concepts of Programming Languages"),lo.forEach(i),ui=u(e),we=a(e,"P",{});var po=n(we);Ft=p(po,"Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),po.forEach(i),fi=u(e),L=a(e,"H3",{id:!0});var mo=n(L);jt=p(mo,"340 Software Engineering"),mo.forEach(i),ci=u(e),be=a(e,"P",{});var uo=n(be);zt=p(uo,"Practical and theoretical concepts of software engineering."),uo.forEach(i),di=u(e),B=a(e,"H3",{id:!0});var fo=n(B);Ot=p(fo,"350 Foundations of Computer Science II"),fo.forEach(i),yi=u(e),_e=a(e,"P",{});var co=n(_e);Mt=p(co,"High level concepts in the theoretical foundations of computer science."),co.forEach(i),hi=u(e),q=a(e,"H3",{id:!0});var yo=n(q);Gt=p(yo,"463 Basic Systems Administration Laboratory"),yo.forEach(i),vi=u(e),ge=a(e,"P",{});var ho=n(ge);Wt=p(ho,"Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),ho.forEach(i),wi=u(e),F=a(e,"H3",{id:!0});var vo=n(F);Jt=p(vo,"464 Intermediate Systems Administration Laboratory"),vo.forEach(i),bi=u(e),Ee=a(e,"P",{});var wo=n(Ee);Rt=p(wo,"Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),wo.forEach(i),_i=u(e),j=a(e,"H3",{id:!0});var bo=n(j);$t=p(bo,"465 Advanced Systems Administration Laboratory"),bo.forEach(i),gi=u(e),Ce=a(e,"P",{});var _o=n(Ce);Ut=p(_o,"Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),_o.forEach(i),Ei=u(e),z=a(e,"H3",{id:!0});var go=n(z);Qt=p(go,"471 Principles of Database Systems"),go.forEach(i),Ci=u(e),Pe=a(e,"P",{});var Eo=n(Pe);Xt=p(Eo,"Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),Eo.forEach(i),Pi=u(e),O=a(e,"H3",{id:!0});var Co=n(O);Zt=p(Co,"490 Senior Project"),Co.forEach(i),Si=u(e),Se=a(e,"P",{});var Po=n(Se);Kt=p(Po,"Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),Po.forEach(i),Ai=u(e),M=a(e,"H3",{id:!0});var So=n(M);Vt=p(So,"493 Honors Work in Computer Science"),So.forEach(i),Hi=u(e),Ae=a(e,"P",{});var Ao=n(Ae);Yt=p(Ao,"Research in a topic of special interest at the Honors level."),Ao.forEach(i),ki=u(e),G=a(e,"H3",{id:!0});var Ho=n(G);es=p(Ho,"495 Selected Topics in Computer Science"),Ho.forEach(i),Ii=u(e),He=a(e,"P",{});var ko=n(He);is=p(ko,`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),ko.forEach(i),Di=u(e),W=a(e,"H3",{id:!0});var Io=n(W);ts=p(Io,"521 Computer Graphics"),Io.forEach(i),Ni=u(e),ke=a(e,"P",{});var Do=n(ke);ss=p(Do,"Survey of graphics algorithms, data structures, and techniques."),Do.forEach(i),Ti=u(e),J=a(e,"H3",{id:!0});var No=n(J);os=p(No,"522 Digital Image Processing"),No.forEach(i),xi=u(e),Ie=a(e,"P",{});var To=n(Ie);rs=p(To,"Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),To.forEach(i),Li=u(e),R=a(e,"H3",{id:!0});var xo=n(R);as=p(xo,"523 Numerical Analysis and Computing"),xo.forEach(i),Bi=u(e),De=a(e,"P",{});var Lo=n(De);ns=p(Lo,"Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),Lo.forEach(i),qi=u(e),$=a(e,"H3",{id:!0});var Bo=n($);ls=p(Bo,"524 Numerical Analysis and Computing"),Bo.forEach(i),Fi=u(e),Ne=a(e,"P",{});var qo=n(Ne);ps=p(qo,"Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),qo.forEach(i),ji=u(e),U=a(e,"H3",{id:!0});var Fo=n(U);ms=p(Fo,"526 Bioinformatics"),Fo.forEach(i),zi=u(e),Te=a(e,"P",{});var jo=n(Te);us=p(jo,"Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),jo.forEach(i),Oi=u(e),Q=a(e,"H3",{id:!0});var zo=n(Q);fs=p(zo,"529 Artificial Intelligence"),zo.forEach(i),Mi=u(e),xe=a(e,"P",{});var Oo=n(xe);cs=p(Oo,"Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),Oo.forEach(i),Gi=u(e),X=a(e,"H3",{id:!0});var Mo=n(X);ds=p(Mo,"539 Introduction to Compiler Design"),Mo.forEach(i),Wi=u(e),Le=a(e,"P",{});var Go=n(Le);ys=p(Go,"Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Go.forEach(i),Ji=u(e),Z=a(e,"H3",{id:!0});var Wo=n(Z);hs=p(Wo,"540 Human-Computer Interface Development"),Wo.forEach(i),Ri=u(e),Be=a(e,"P",{});var Jo=n(Be);vs=p(Jo,"Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),Jo.forEach(i),$i=u(e),K=a(e,"H3",{id:!0});var Ro=n(K);ws=p(Ro,"550 Combinatorics on Words"),Ro.forEach(i),Ui=u(e),qe=a(e,"P",{});var $o=n(qe);bs=p($o,"Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),$o.forEach(i),Qi=u(e),V=a(e,"H3",{id:!0});var Uo=n(V);_s=p(Uo,"553 Theory of Computation"),Uo.forEach(i),Xi=u(e),Fe=a(e,"P",{});var Qo=n(Fe);gs=p(Qo,"Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Qo.forEach(i),Zi=u(e),Y=a(e,"H3",{id:!0});var Xo=n(Y);Es=p(Xo,"555 Algorithm Analysis and Design"),Xo.forEach(i),Ki=u(e),je=a(e,"P",{});var Zo=n(je);Cs=p(Zo,"Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Zo.forEach(i),Vi=u(e),ee=a(e,"H3",{id:!0});var Ko=n(ee);Ps=p(Ko,"561 Principles of Computer Architecture"),Ko.forEach(i),Yi=u(e),ze=a(e,"P",{});var Vo=n(ze);Ss=p(Vo,"Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),Vo.forEach(i),et=u(e),ie=a(e,"H3",{id:!0});var Yo=n(ie);As=p(Yo,"562 Principles of Operating Systems"),Yo.forEach(i),it=u(e),Oe=a(e,"P",{});var er=n(Oe);Hs=p(er,"Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),er.forEach(i),tt=u(e),te=a(e,"H3",{id:!0});var ir=n(te);ks=p(ir,"567 Principles of Computer Networks"),ir.forEach(i),st=u(e),Me=a(e,"P",{});var tr=n(Me);Is=p(tr,"Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),tr.forEach(i),ot=u(e),se=a(e,"H3",{id:!0});var sr=n(se);Ds=p(sr,"568 Principles of Wireless Networks"),sr.forEach(i),rt=u(e),Ge=a(e,"P",{});var or=n(Ge);Ns=p(or,"Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),or.forEach(i),at=u(e),oe=a(e,"H3",{id:!0});var rr=n(oe);Ts=p(rr,"580 Cryptography and Security in Computing"),rr.forEach(i),nt=u(e),We=a(e,"P",{});var ar=n(We);xs=p(ar,"Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),ar.forEach(i),lt=u(e),re=a(e,"H3",{id:!0});var nr=n(re);Ls=p(nr,"583 Firewall Architecture and Computer Security"),nr.forEach(i),pt=u(e),Je=a(e,"P",{});var lr=n(Je);Bs=p(lr,"Firewall hardware and software technologies. Architectures, protocols and their applications."),lr.forEach(i),this.h()},h(){f(h,"id","general-programming-courses"),f(b,"id","graphics"),f(g,"id","algorithms"),f(E,"id","230-elementary-data-structures-and-algorithms"),f(C,"id","networking"),f(P,"id","math-based-courses"),f(S,"id","250-foundations-of-computer-science-i"),f(A,"id","hardware"),f(H,"id","261-computer-organization-and-assembly-language"),f(k,"href","http://http://timhatch.com/projects/jsassembly/"),f(k,"rel","nofollow"),f(I,"href","http://benfirshman.com/projects/jsnes/"),f(I,"rel","nofollow"),f(D,"href","http://6502asm.com/"),f(D,"rel","nofollow"),f(N,"id","outside-the-browser"),f(T,"id","330-advanced-data-structures"),f(x,"id","339-concepts-of-programming-languages"),f(L,"id","340-software-engineering"),f(B,"id","350-foundations-of-computer-science-ii"),f(q,"id","463-basic-systems-administration-laboratory"),f(F,"id","464-intermediate-systems-administration-laboratory"),f(j,"id","465-advanced-systems-administration-laboratory"),f(z,"id","471-principles-of-database-systems"),f(O,"id","490-senior-project"),f(M,"id","493-honors-work-in-computer-science"),f(G,"id","495-selected-topics-in-computer-science"),f(W,"id","521-computer-graphics"),f(J,"id","522-digital-image-processing"),f(R,"id","523-numerical-analysis-and-computing"),f($,"id","524-numerical-analysis-and-computing"),f(U,"id","526-bioinformatics"),f(Q,"id","529-artificial-intelligence"),f(X,"id","539-introduction-to-compiler-design"),f(Z,"id","540-human-computer-interface-development"),f(K,"id","550-combinatorics-on-words"),f(V,"id","553-theory-of-computation"),f(Y,"id","555-algorithm-analysis-and-design"),f(ee,"id","561-principles-of-computer-architecture"),f(ie,"id","562-principles-of-operating-systems"),f(te,"id","567-principles-of-computer-networks"),f(se,"id","568-principles-of-wireless-networks"),f(oe,"id","580-cryptography-and-security-in-computing"),f(re,"id","583-firewall-architecture-and-computer-security")},m(e,t){s(e,c,t),o(c,v),s(e,w,t),s(e,h,t),o(h,d),s(e,y,t),s(e,b,t),o(b,mt),s(e,$e,t),s(e,g,t),o(g,ut),s(e,Ue,t),s(e,E,t),o(E,ft),s(e,Qe,t),s(e,ne,t),o(ne,ct),s(e,Xe,t),s(e,C,t),o(C,dt),s(e,Ze,t),s(e,P,t),o(P,yt),s(e,Ke,t),s(e,S,t),o(S,ht),s(e,Ve,t),s(e,le,t),o(le,vt),s(e,Ye,t),s(e,A,t),o(A,wt),s(e,ei,t),s(e,pe,t),o(pe,bt),s(e,ii,t),s(e,H,t),o(H,_t),s(e,ti,t),s(e,me,t),o(me,gt),s(e,si,t),s(e,ue,t),o(ue,Et),s(e,oi,t),s(e,_,t),o(_,fe),o(fe,k),o(k,Ct),o(fe,Pt),o(_,St),o(_,ce),o(ce,I),o(I,At),o(ce,Ht),o(_,kt),o(_,de),o(de,D),o(D,It),o(de,Dt),s(e,ri,t),s(e,ye,t),o(ye,Nt),s(e,ai,t),s(e,N,t),o(N,Tt),s(e,ni,t),s(e,he,t),o(he,xt),s(e,li,t),s(e,T,t),o(T,Lt),s(e,pi,t),s(e,ve,t),o(ve,Bt),s(e,mi,t),s(e,x,t),o(x,qt),s(e,ui,t),s(e,we,t),o(we,Ft),s(e,fi,t),s(e,L,t),o(L,jt),s(e,ci,t),s(e,be,t),o(be,zt),s(e,di,t),s(e,B,t),o(B,Ot),s(e,yi,t),s(e,_e,t),o(_e,Mt),s(e,hi,t),s(e,q,t),o(q,Gt),s(e,vi,t),s(e,ge,t),o(ge,Wt),s(e,wi,t),s(e,F,t),o(F,Jt),s(e,bi,t),s(e,Ee,t),o(Ee,Rt),s(e,_i,t),s(e,j,t),o(j,$t),s(e,gi,t),s(e,Ce,t),o(Ce,Ut),s(e,Ei,t),s(e,z,t),o(z,Qt),s(e,Ci,t),s(e,Pe,t),o(Pe,Xt),s(e,Pi,t),s(e,O,t),o(O,Zt),s(e,Si,t),s(e,Se,t),o(Se,Kt),s(e,Ai,t),s(e,M,t),o(M,Vt),s(e,Hi,t),s(e,Ae,t),o(Ae,Yt),s(e,ki,t),s(e,G,t),o(G,es),s(e,Ii,t),s(e,He,t),o(He,is),s(e,Di,t),s(e,W,t),o(W,ts),s(e,Ni,t),s(e,ke,t),o(ke,ss),s(e,Ti,t),s(e,J,t),o(J,os),s(e,xi,t),s(e,Ie,t),o(Ie,rs),s(e,Li,t),s(e,R,t),o(R,as),s(e,Bi,t),s(e,De,t),o(De,ns),s(e,qi,t),s(e,$,t),o($,ls),s(e,Fi,t),s(e,Ne,t),o(Ne,ps),s(e,ji,t),s(e,U,t),o(U,ms),s(e,zi,t),s(e,Te,t),o(Te,us),s(e,Oi,t),s(e,Q,t),o(Q,fs),s(e,Mi,t),s(e,xe,t),o(xe,cs),s(e,Gi,t),s(e,X,t),o(X,ds),s(e,Wi,t),s(e,Le,t),o(Le,ys),s(e,Ji,t),s(e,Z,t),o(Z,hs),s(e,Ri,t),s(e,Be,t),o(Be,vs),s(e,$i,t),s(e,K,t),o(K,ws),s(e,Ui,t),s(e,qe,t),o(qe,bs),s(e,Qi,t),s(e,V,t),o(V,_s),s(e,Xi,t),s(e,Fe,t),o(Fe,gs),s(e,Zi,t),s(e,Y,t),o(Y,Es),s(e,Ki,t),s(e,je,t),o(je,Cs),s(e,Vi,t),s(e,ee,t),o(ee,Ps),s(e,Yi,t),s(e,ze,t),o(ze,Ss),s(e,et,t),s(e,ie,t),o(ie,As),s(e,it,t),s(e,Oe,t),o(Oe,Hs),s(e,tt,t),s(e,te,t),o(te,ks),s(e,st,t),s(e,Me,t),o(Me,Is),s(e,ot,t),s(e,se,t),o(se,Ds),s(e,rt,t),s(e,Ge,t),o(Ge,Ns),s(e,at,t),s(e,oe,t),o(oe,Ts),s(e,nt,t),s(e,We,t),o(We,xs),s(e,lt,t),s(e,re,t),o(re,Ls),s(e,pt,t),s(e,Je,t),o(Je,Bs)},p:Er,d(e){e&&i(c),e&&i(w),e&&i(h),e&&i(y),e&&i(b),e&&i($e),e&&i(g),e&&i(Ue),e&&i(E),e&&i(Qe),e&&i(ne),e&&i(Xe),e&&i(C),e&&i(Ze),e&&i(P),e&&i(Ke),e&&i(S),e&&i(Ve),e&&i(le),e&&i(Ye),e&&i(A),e&&i(ei),e&&i(pe),e&&i(ii),e&&i(H),e&&i(ti),e&&i(me),e&&i(si),e&&i(ue),e&&i(oi),e&&i(_),e&&i(ri),e&&i(ye),e&&i(ai),e&&i(N),e&&i(ni),e&&i(he),e&&i(li),e&&i(T),e&&i(pi),e&&i(ve),e&&i(mi),e&&i(x),e&&i(ui),e&&i(we),e&&i(fi),e&&i(L),e&&i(ci),e&&i(be),e&&i(di),e&&i(B),e&&i(yi),e&&i(_e),e&&i(hi),e&&i(q),e&&i(vi),e&&i(ge),e&&i(wi),e&&i(F),e&&i(bi),e&&i(Ee),e&&i(_i),e&&i(j),e&&i(gi),e&&i(Ce),e&&i(Ei),e&&i(z),e&&i(Ci),e&&i(Pe),e&&i(Pi),e&&i(O),e&&i(Si),e&&i(Se),e&&i(Ai),e&&i(M),e&&i(Hi),e&&i(Ae),e&&i(ki),e&&i(G),e&&i(Ii),e&&i(He),e&&i(Di),e&&i(W),e&&i(Ni),e&&i(ke),e&&i(Ti),e&&i(J),e&&i(xi),e&&i(Ie),e&&i(Li),e&&i(R),e&&i(Bi),e&&i(De),e&&i(qi),e&&i($),e&&i(Fi),e&&i(Ne),e&&i(ji),e&&i(U),e&&i(zi),e&&i(Te),e&&i(Oi),e&&i(Q),e&&i(Mi),e&&i(xe),e&&i(Gi),e&&i(X),e&&i(Wi),e&&i(Le),e&&i(Ji),e&&i(Z),e&&i(Ri),e&&i(Be),e&&i($i),e&&i(K),e&&i(Ui),e&&i(qe),e&&i(Qi),e&&i(V),e&&i(Xi),e&&i(Fe),e&&i(Zi),e&&i(Y),e&&i(Ki),e&&i(je),e&&i(Vi),e&&i(ee),e&&i(Yi),e&&i(ze),e&&i(et),e&&i(ie),e&&i(it),e&&i(Oe),e&&i(tt),e&&i(te),e&&i(st),e&&i(Me),e&&i(ot),e&&i(se),e&&i(rt),e&&i(Ge),e&&i(at),e&&i(oe),e&&i(nt),e&&i(We),e&&i(lt),e&&i(re),e&&i(pt),e&&i(Je)}}}function Sr(ae){let c,v;const w=[ae[0],ur];let h={$$slots:{default:[Pr]},$$scope:{ctx:ae}};for(let d=0;d<w.length;d+=1)h=zs(h,w[d]);return c=new Cr({props:h}),{c(){yr(c.$$.fragment)},l(d){hr(c.$$.fragment,d)},m(d,y){vr(c,d,y),v=!0},p(d,[y]){const b=y&1?wr(w,[y&1&&pr(d[0]),y&0&&pr(ur)]):{};y&2&&(b.$$scope={dirty:y,ctx:d}),c.$set(b)},i(d){v||(br(c.$$.fragment,d),v=!0)},o(d){_r(c.$$.fragment,d),v=!1},d(d){gr(c,d)}}}const ur={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Teaching Computer Science in a Web Browser?",description:"Ideas on how to teach CSC courses using only a web browser",excerpt:null,cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["programming"],tags:["Education","Online Education"],created_at:"2010-06-02T21:48:00.000Z",updated_at:"2010-06-02T21:48:00.000Z"};function Ar(ae,c,v){return ae.$$set=w=>{v(0,c=zs(zs({},c),mr(w)))},c=mr(c),[c]}class Ir extends fr{constructor(c){super(),cr(this,c,Ar,Sr,dr,{})}}export{Ir as default,ur as metadata};
