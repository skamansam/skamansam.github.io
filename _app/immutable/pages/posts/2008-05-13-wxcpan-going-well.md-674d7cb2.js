import{S as R,i as j,s as q,D as T,x as O,y as F,z as J,A as K,B as z,r as Q,p as V,C as X,L as B,e as f,t as v,k as I,c as _,a as g,h as w,d as l,m as k,b as Y,g as i,I as m,n as Z}from"../../chunks/index-f0cd6aaa.js";import{P as ee}from"../../chunks/post-d11a0746.js";import"../../chunks/stores-707f9fa0.js";import"../../chunks/settings-69239d06.js";function te(P){let t,r,c,n,a=`<code class="language-perl">perl <span class="token operator">-</span>MCPANPLUS <span class="token operator">-e</span> <span class="token string">'shell(Wx)'</span></code>`,s,p,A,x,u,L,S,E,N,C,h,b,d,$;return{c(){t=f("p"),r=v("I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),c=I(),n=f("pre"),s=I(),p=f("p"),A=v("I have created a perl script for testing this."),x=I(),u=f("p"),L=v("I have also created a new svn branch, "),S=f("code"),E=v("development"),N=v(". This is the current working branch."),C=I(),h=f("p"),b=v("You can view or download my current development code, via svn. "),d=f("a"),$=v(`See the googlecode
svn repo here`),this.h()},l(e){t=_(e,"P",{});var o=g(t);r=w(o,"I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),o.forEach(l),c=k(e),n=_(e,"PRE",{class:!0});var H=g(n);H.forEach(l),s=k(e),p=_(e,"P",{});var W=g(p);A=w(W,"I have created a perl script for testing this."),W.forEach(l),x=k(e),u=_(e,"P",{});var y=g(u);L=w(y,"I have also created a new svn branch, "),S=_(y,"CODE",{});var G=g(S);E=w(G,"development"),G.forEach(l),N=w(y,". This is the current working branch."),y.forEach(l),C=k(e),h=_(e,"P",{});var U=g(h);b=w(U,"You can view or download my current development code, via svn. "),d=_(U,"A",{href:!0,rel:!0});var M=g(d);$=w(M,`See the googlecode
svn repo here`),M.forEach(l),U.forEach(l),this.h()},h(){Y(n,"class","language-perl"),Y(d,"href","http://code.google.com/p/wxcpan/source/browse"),Y(d,"rel","nofollow")},m(e,o){i(e,t,o),m(t,r),i(e,c,o),i(e,n,o),n.innerHTML=a,i(e,s,o),i(e,p,o),m(p,A),i(e,x,o),i(e,u,o),m(u,L),m(u,S),m(S,E),m(u,N),i(e,C,o),i(e,h,o),m(h,b),m(h,d),m(d,$)},p:Z,d(e){e&&l(t),e&&l(c),e&&l(n),e&&l(s),e&&l(p),e&&l(x),e&&l(u),e&&l(C),e&&l(h)}}}function ae(P){let t,r;const c=[P[0],D];let n={$$slots:{default:[te]},$$scope:{ctx:P}};for(let a=0;a<c.length;a+=1)n=T(n,c[a]);return t=new ee({props:n}),{c(){O(t.$$.fragment)},l(a){F(t.$$.fragment,a)},m(a,s){J(t,a,s),r=!0},p(a,[s]){const p=s&1?K(c,[s&1&&z(a[0]),s&0&&z(D)]):{};s&2&&(p.$$scope={dirty:s,ctx:a}),t.$set(p)},i(a){r||(Q(t.$$.fragment,a),r=!0)},o(a){V(t.$$.fragment,a),r=!1},d(a){X(t,a)}}}const D={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"wxCPAN Going Well",description:"wxCPAN Going Well",excerpt:"I have successfully managed to implement a CPANPLUS::Shell.",cover:!1,coverImage:"/images/GSoC-logo-horizontal-800.png",coverAlt:"RBE Logo",categories:["perl"],tags:["gSoC"],created_at:"2008-05-13 14:56",updated_at:"2008-05-13 14:56",readingTime:{text:"1 min read",minutes:.27,time:16200,words:54},preview:`I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:

`,previewHtml:"<p>I have successfully managed to implement a CPANPLUS::Shell. You call the shell like:</p> <pre><code>perl -MCPANPLUS -e 'shell(Wx)' </code></pre>",textContent:`I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:



I have created a perl script for testing this.

I have also created a new svn branch, . This is the current working branch.

You can view or download my current development code, via svn. See the googlecode...`};function le(P,t,r){return P.$$set=c=>{r(0,t=T(T({},t),B(c)))},t=B(t),[t]}class ce extends R{constructor(t){super(),j(this,t,le,ae,q,{})}}export{ce as default,D as metadata};
