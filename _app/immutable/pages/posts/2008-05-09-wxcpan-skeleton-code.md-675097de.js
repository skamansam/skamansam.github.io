import{S as _,i as f,s as h,D as l,x as p,y as g,z as y,A as v,B as c,r as w,p as x,C as b,L as d,e as I,t as C,c as $,a as A,h as P,d as u,g as k,I as S,n as z}from"../../chunks/index-a5078a7d.js";import{P as B}from"../../chunks/post-ac48aa50.js";function E(r){let e,s;return{c(){e=I("p"),s=C(`I have started doing heavy-duty research into w\u{1F61D}erl, and have created a bit of
skeleton code for subclasses, as well as cpan-ready file layout. I am starting
on the documentation of the classes I am using (mainly subclasses of wxTreeCtrl
to display the data).  At this rate, my documentation will be mostly finished
before I even have one line of handwritten code!`)},l(a){e=$(a,"P",{});var n=A(e);s=P(n,`I have started doing heavy-duty research into w\u{1F61D}erl, and have created a bit of
skeleton code for subclasses, as well as cpan-ready file layout. I am starting
on the documentation of the classes I am using (mainly subclasses of wxTreeCtrl
to display the data).  At this rate, my documentation will be mostly finished
before I even have one line of handwritten code!`),n.forEach(u)},m(a,n){k(a,e,n),S(e,s)},p:z,d(a){a&&u(e)}}}function L(r){let e,s;const a=[r[0],m];let n={$$slots:{default:[E]},$$scope:{ctx:r}};for(let t=0;t<a.length;t+=1)n=l(n,a[t]);return e=new B({props:n}),{c(){p(e.$$.fragment)},l(t){g(e.$$.fragment,t)},m(t,o){y(e,t,o),s=!0},p(t,[o]){const i=o&1?v(a,[o&1&&c(t[0]),o&0&&c(m)]):{};o&2&&(i.$$scope={dirty:o,ctx:t}),e.$set(i)},i(t){s||(w(e.$$.fragment,t),s=!0)},o(t){x(e.$$.fragment,t),s=!1},d(t){b(e,t)}}}const m={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"wxCPAN Skeleton Code",description:"wxCPAN is underway!",excerpt:"I have started doing heavy-duty research into wxPerl",cover:!1,coverImage:"/images/GSoC-logo-horizontal-800.png",coverAlt:"RBE Logo",categories:["perl"],tags:["gSoC"],created_at:"2008-05-09 14:40",updated_at:"2008-05-09 14:40"};function N(r,e,s){return r.$$set=a=>{s(0,e=l(l({},e),d(a)))},e=d(e),[e]}class q extends _{constructor(e){super(),f(this,e,N,L,h,{})}}export{q as default,m as metadata};
