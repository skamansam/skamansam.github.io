import{S as j,i as q,s as H,D as G,x as O,y as F,z as J,A as K,B,r as Q,p as V,C as X,L as D,e as d,t as v,k as E,c as h,a as g,h as w,d as s,m as k,b as Y,g as i,I as u,n as Z}from"../../chunks/index-fb0fe4b0.js";import{P as ee}from"../../chunks/post-72541c77.js";function te(P){let t,r,c,n,a=`<code class="language-perl">perl <span class="token operator">-</span>MCPANPLUS <span class="token operator">-e</span> <span class="token string">'shell(Wx)'</span></code>`,l,p,A,S,m,I,x,$,b,C,_,L,f,N;return{c(){t=d("p"),r=v("I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),c=E(),n=d("pre"),l=E(),p=d("p"),A=v("I have created a perl script for testing this."),S=E(),m=d("p"),I=v("I have also created a new svn branch, "),x=d("code"),$=v("development"),b=v(". This is the current working branch."),C=E(),_=d("p"),L=v("You can view or download my current development code, via svn. "),f=d("a"),N=v(`See the googlecode
svn repo here`),this.h()},l(e){t=h(e,"P",{});var o=g(t);r=w(o,"I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),o.forEach(s),c=k(e),n=h(e,"PRE",{class:!0});var R=g(n);R.forEach(s),l=k(e),p=h(e,"P",{});var T=g(p);A=w(T,"I have created a perl script for testing this."),T.forEach(s),S=k(e),m=h(e,"P",{});var y=g(m);I=w(y,"I have also created a new svn branch, "),x=h(y,"CODE",{});var W=g(x);$=w(W,"development"),W.forEach(s),b=w(y,". This is the current working branch."),y.forEach(s),C=k(e),_=h(e,"P",{});var U=g(_);L=w(U,"You can view or download my current development code, via svn. "),f=h(U,"A",{href:!0,rel:!0});var z=g(f);N=w(z,`See the googlecode
svn repo here`),z.forEach(s),U.forEach(s),this.h()},h(){Y(n,"class","language-perl"),Y(f,"href","http://code.google.com/p/wxcpan/source/browse"),Y(f,"rel","nofollow")},m(e,o){i(e,t,o),u(t,r),i(e,c,o),i(e,n,o),n.innerHTML=a,i(e,l,o),i(e,p,o),u(p,A),i(e,S,o),i(e,m,o),u(m,I),u(m,x),u(x,$),u(m,b),i(e,C,o),i(e,_,o),u(_,L),u(_,f),u(f,N)},p:Z,d(e){e&&s(t),e&&s(c),e&&s(n),e&&s(l),e&&s(p),e&&s(S),e&&s(m),e&&s(C),e&&s(_)}}}function ae(P){let t,r;const c=[P[0],M];let n={$$slots:{default:[te]},$$scope:{ctx:P}};for(let a=0;a<c.length;a+=1)n=G(n,c[a]);return t=new ee({props:n}),{c(){O(t.$$.fragment)},l(a){F(t.$$.fragment,a)},m(a,l){J(t,a,l),r=!0},p(a,[l]){const p=l&1?K(c,[l&1&&B(a[0]),l&0&&B(M)]):{};l&2&&(p.$$scope={dirty:l,ctx:a}),t.$set(p)},i(a){r||(Q(t.$$.fragment,a),r=!0)},o(a){V(t.$$.fragment,a),r=!1},d(a){X(t,a)}}}const M={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"wxCPAN Going Well",description:"wxCPAN Going Well",excerpt:"I have successfully managed to implement a CPANPLUS::Shell.",cover:!1,coverImage:"/images/GSoC-logo-horizontal-800.png",coverAlt:"RBE Logo",categories:["perl"],tags:["gSoC"],created_at:"2008-05-13 14:56",updated_at:"2008-05-13 14:56"};function se(P,t,r){return P.$$set=c=>{r(0,t=G(G({},t),D(c)))},t=D(t),[t]}class ne extends j{constructor(t){super(),q(this,t,se,ae,H,{})}}export{ne as default,M as metadata};
