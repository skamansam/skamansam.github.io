import{S as z,i as M,s as B,C,y as Z,z as G,A as D,H as J,a0 as H,g as K,d as N,B as O,L as q,k as m,q as S,a as _,l as h,m as y,r as E,h as t,c as g,n as $,b as i,G as b,I as U}from"./index.8495bde4.js";import{P as V}from"./post.98a719d8.js";function X(k){let a,l,c,o,s=`<code class="language-css"><span class="token selector">input.hidden</span><span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span>
<span class="token selector">h2</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #648dd7<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>​</code>`,p,u,I,v,r,L='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myInput<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[Header Input]<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code>',w,f,x,j,d,T=`<code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input.hidden'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span>
                      <span class="token string">'blur'</span><span class="token punctuation">,</span>
                      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>
                  <span class="token punctuation">)</span>
                <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span>​<span class="token punctuation">;</span></code>`;return{c(){a=m("p"),l=S(`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I add:`),c=_(),o=m("pre"),p=_(),u=m("p"),I=S("and in my html, I have:"),v=_(),r=m("pre"),w=_(),f=m("p"),x=S("And here is the fun part. Essentially one line of javascript to accomplish this easy feat:"),j=_(),d=m("pre"),this.h()},l(n){a=h(n,"P",{});var e=y(a);l=E(e,`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I add:`),e.forEach(t),c=g(n),o=h(n,"PRE",{class:!0});var W=y(o);W.forEach(t),p=g(n),u=h(n,"P",{});var P=y(u);I=E(P,"and in my html, I have:"),P.forEach(t),v=g(n),r=h(n,"PRE",{class:!0});var A=y(r);A.forEach(t),w=g(n),f=h(n,"P",{});var Q=y(f);x=E(Q,"And here is the fun part. Essentially one line of javascript to accomplish this easy feat:"),Q.forEach(t),j=g(n),d=h(n,"PRE",{class:!0});var R=y(d);R.forEach(t),this.h()},h(){$(o,"class","language-css"),$(r,"class","language-html"),$(d,"class","language-javascript")},m(n,e){i(n,a,e),b(a,l),i(n,c,e),i(n,o,e),o.innerHTML=s,i(n,p,e),i(n,u,e),b(u,I),i(n,v,e),i(n,r,e),r.innerHTML=L,i(n,w,e),i(n,f,e),b(f,x),i(n,j,e),i(n,d,e),d.innerHTML=T},p:U,d(n){n&&t(a),n&&t(c),n&&t(o),n&&t(p),n&&t(u),n&&t(v),n&&t(r),n&&t(w),n&&t(f),n&&t(j),n&&t(d)}}}function Y(k){let a,l;const c=[k[0],F];let o={$$slots:{default:[X]},$$scope:{ctx:k}};for(let s=0;s<c.length;s+=1)o=C(o,c[s]);return a=new V({props:o}),{c(){Z(a.$$.fragment)},l(s){G(a.$$.fragment,s)},m(s,p){D(a,s,p),l=!0},p(s,[p]){const u=p&1?J(c,[p&1&&H(s[0]),p&0&&H(F)]):{};p&2&&(u.$$scope={dirty:p,ctx:s}),a.$set(u)},i(s){l||(K(a.$$.fragment,s),l=!0)},o(s){N(a.$$.fragment,s),l=!1},d(s){O(a,s)}}}const F={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Inline input fields with minimal jQuery",description:"Create an inline edit field with one line of jQuery",excerpt:"Essentially one line of javascript to accomplish this easy feat",cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["web-development"],tags:["jQuery"],created_at:"2012-05-25T14:46:00.000Z",updated_at:"2012-05-25T14:46:00.000Z",preview:`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it...`,previewHtml:"<p>For one of my projects, i needed to put a text field inside a header element. When I did so, the input field ruined my layout and good looks! So I went the jQuery way and devised a method for hiding inputs when not in use, but when clicking on it, tu...</p>",textContent:`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I...`};function nn(k,a,l){return k.$$set=c=>{l(0,a=C(C({},a),q(c)))},a=q(a),[a]}class tn extends z{constructor(a){super(),M(this,a,nn,Y,B,{})}}export{tn as default,F as metadata};
