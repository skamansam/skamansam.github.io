import{S as ur,i as cr,s as dr,C as zs,w as yr,x as vr,y as hr,H as wr,Z as pr,f as br,t as _r,z as Er,K as mr,k as r,q as n,a as m,l as a,m as l,r as p,h as t,c as f,n as Re,b as s,G as o,B as Cr}from"./index-6a3f2268.js";import{P as Pr}from"./post-3c5a9cb3.js";function Sr(P){let u,y,v,h,c,d,b,mi,$e,S,fi,Ue,A,ui,Ze,g,ci,Qe,H,di,Xe,k,yi,Ke,I,vi,Ve,D,hi,Ye,N,wi,et,T,bi,tt,x,_i,it,B,Ei,st,L,Ci,ot,w,q,_,Pi,Si,Ai,F,E,gi,Hi,ki,j,C,Ii,Di,rt,z,Ni,at,O,Ti,lt,M,xi,nt,G,Bi,pt,W,Li,mt,J,qi,ft,R,Fi,ut,$,ji,ct,U,zi,dt,Z,Oi,yt,Q,Mi,vt,X,Gi,ht,K,Wi,wt,V,Ji,bt,Y,Ri,_t,ee,$i,Et,te,Ui,Ct,ie,Zi,Pt,se,Qi,St,oe,Xi,At,re,Ki,gt,ae,Vi,Ht,le,Yi,kt,ne,es,It,pe,ts,Dt,me,is,Nt,fe,ss,Tt,ue,os,xt,ce,rs,Bt,de,as,Lt,ye,ls,qt,ve,ns,Ft,he,ps,jt,we,ms,zt,be,fs,Ot,_e,us,Mt,Ee,cs,Gt,Ce,ds,Wt,Pe,ys,Jt,Se,vs,Rt,Ae,hs,$t,ge,ws,Ut,He,bs,Zt,ke,_s,Qt,Ie,Es,Xt,De,Cs,Kt,Ne,Ps,Vt,Te,Ss,Yt,xe,As,ei,Be,gs,ti,Le,Hs,ii,qe,ks,si,Fe,Is,oi,je,Ds,ri,ze,Ns,ai,Oe,Ts,li,Me,xs,ni,Ge,Bs,pi,We,Ls;return{c(){u=r("p"),y=n(`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic "Outside the Browser"`),v=m(),h=r("h2"),c=n("General Programming Courses"),d=m(),b=r("h2"),mi=n("Graphics"),$e=m(),S=r("h2"),fi=n("Algorithms"),Ue=m(),A=r("h3"),ui=n("230 Elementary Data Structures and Algorithms"),Ze=m(),g=r("p"),ci=n(`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Qe=m(),H=r("h2"),di=n("Networking"),Xe=m(),k=r("h2"),yi=n("Math-Based Courses"),Ke=m(),I=r("h3"),vi=n("250 Foundations of Computer Science I"),Ve=m(),D=r("p"),hi=n(`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Ye=m(),N=r("h2"),wi=n("Hardware"),et=m(),T=r("p"),bi=n("These classes are designed to teach specific hardware concepts"),tt=m(),x=r("h3"),_i=n("261 Computer Organization and Assembly Language"),it=m(),B=r("p"),Ei=n(`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),st=m(),L=r("p"),Ci=n(`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. Â Here are a few online
interpreters of interest for this classJS:`),ot=m(),w=r("ul"),q=r("li"),_=r("a"),Pi=n("JSAssembly"),Si=n(" - an interpeter for x86 assembly codes"),Ai=m(),F=r("li"),E=r("a"),gi=n("JSNES"),Hi=n(" - Great working interpreter for SNES ROM images"),ki=m(),j=r("li"),C=r("a"),Ii=n("6502asm"),Di=n(" - 6502 assembly code interpreter"),rt=m(),z=r("p"),Ni=n(`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),at=m(),O=r("h2"),Ti=n("Outside the Browser"),lt=m(),M=r("p"),xi=n("These courses are designed to teach specific software, and"),nt=m(),G=r("h3"),Bi=n("330 Advanced Data Structures"),pt=m(),W=r("p"),Li=n("Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),mt=m(),J=r("h3"),qi=n("339 Concepts of Programming Languages"),ft=m(),R=r("p"),Fi=n("Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),ut=m(),$=r("h3"),ji=n("340 Software Engineering"),ct=m(),U=r("p"),zi=n("Practical and theoretical concepts of software engineering."),dt=m(),Z=r("h3"),Oi=n("350 Foundations of Computer Science II"),yt=m(),Q=r("p"),Mi=n("High level concepts in the theoretical foundations of computer science."),vt=m(),X=r("h3"),Gi=n("463 Basic Systems Administration Laboratory"),ht=m(),K=r("p"),Wi=n("Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),wt=m(),V=r("h3"),Ji=n("464 Intermediate Systems Administration Laboratory"),bt=m(),Y=r("p"),Ri=n("Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),_t=m(),ee=r("h3"),$i=n("465 Advanced Systems Administration Laboratory"),Et=m(),te=r("p"),Ui=n("Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),Ct=m(),ie=r("h3"),Zi=n("471 Principles of Database Systems"),Pt=m(),se=r("p"),Qi=n("Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),St=m(),oe=r("h3"),Xi=n("490 Senior Project"),At=m(),re=r("p"),Ki=n("Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),gt=m(),ae=r("h3"),Vi=n("493 Honors Work in Computer Science"),Ht=m(),le=r("p"),Yi=n("Research in a topic of special interest at the Honors level."),kt=m(),ne=r("h3"),es=n("495 Selected Topics in Computer Science"),It=m(),pe=r("p"),ts=n(`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),Dt=m(),me=r("h3"),is=n("521 Computer Graphics"),Nt=m(),fe=r("p"),ss=n("Survey of graphics algorithms, data structures, and techniques."),Tt=m(),ue=r("h3"),os=n("522 Digital Image Processing"),xt=m(),ce=r("p"),rs=n("Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),Bt=m(),de=r("h3"),as=n("523 Numerical Analysis and Computing"),Lt=m(),ye=r("p"),ls=n("Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),qt=m(),ve=r("h3"),ns=n("524 Numerical Analysis and Computing"),Ft=m(),he=r("p"),ps=n("Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),jt=m(),we=r("h3"),ms=n("526 Bioinformatics"),zt=m(),be=r("p"),fs=n("Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),Ot=m(),_e=r("h3"),us=n("529 Artificial Intelligence"),Mt=m(),Ee=r("p"),cs=n("Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),Gt=m(),Ce=r("h3"),ds=n("539 Introduction to Compiler Design"),Wt=m(),Pe=r("p"),ys=n("Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Jt=m(),Se=r("h3"),vs=n("540 Human-Computer Interface Development"),Rt=m(),Ae=r("p"),hs=n("Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),$t=m(),ge=r("h3"),ws=n("550 Combinatorics on Words"),Ut=m(),He=r("p"),bs=n("Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),Zt=m(),ke=r("h3"),_s=n("553 Theory of Computation"),Qt=m(),Ie=r("p"),Es=n("Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Xt=m(),De=r("h3"),Cs=n("555 Algorithm Analysis and Design"),Kt=m(),Ne=r("p"),Ps=n("Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Vt=m(),Te=r("h3"),Ss=n("561 Principles of Computer Architecture"),Yt=m(),xe=r("p"),As=n("Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),ei=m(),Be=r("h3"),gs=n("562 Principles of Operating Systems"),ti=m(),Le=r("p"),Hs=n("Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),ii=m(),qe=r("h3"),ks=n("567 Principles of Computer Networks"),si=m(),Fe=r("p"),Is=n("Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),oi=m(),je=r("h3"),Ds=n("568 Principles of Wireless Networks"),ri=m(),ze=r("p"),Ns=n("Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),ai=m(),Oe=r("h3"),Ts=n("580 Cryptography and Security in Computing"),li=m(),Me=r("p"),xs=n("Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),ni=m(),Ge=r("h3"),Bs=n("583 Firewall Architecture and Computer Security"),pi=m(),We=r("p"),Ls=n("Firewall hardware and software technologies. Architectures, protocols and their applications."),this.h()},l(e){u=a(e,"P",{});var i=l(u);y=p(i,`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic "Outside the Browser"`),i.forEach(t),v=f(e),h=a(e,"H2",{});var Os=l(h);c=p(Os,"General Programming Courses"),Os.forEach(t),d=f(e),b=a(e,"H2",{});var Ms=l(b);mi=p(Ms,"Graphics"),Ms.forEach(t),$e=f(e),S=a(e,"H2",{});var Gs=l(S);fi=p(Gs,"Algorithms"),Gs.forEach(t),Ue=f(e),A=a(e,"H3",{});var Ws=l(A);ui=p(Ws,"230 Elementary Data Structures and Algorithms"),Ws.forEach(t),Ze=f(e),g=a(e,"P",{});var Js=l(g);ci=p(Js,`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Js.forEach(t),Qe=f(e),H=a(e,"H2",{});var Rs=l(H);di=p(Rs,"Networking"),Rs.forEach(t),Xe=f(e),k=a(e,"H2",{});var $s=l(k);yi=p($s,"Math-Based Courses"),$s.forEach(t),Ke=f(e),I=a(e,"H3",{});var Us=l(I);vi=p(Us,"250 Foundations of Computer Science I"),Us.forEach(t),Ve=f(e),D=a(e,"P",{});var Zs=l(D);hi=p(Zs,`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Zs.forEach(t),Ye=f(e),N=a(e,"H2",{});var Qs=l(N);wi=p(Qs,"Hardware"),Qs.forEach(t),et=f(e),T=a(e,"P",{});var Xs=l(T);bi=p(Xs,"These classes are designed to teach specific hardware concepts"),Xs.forEach(t),tt=f(e),x=a(e,"H3",{});var Ks=l(x);_i=p(Ks,"261 Computer Organization and Assembly Language"),Ks.forEach(t),it=f(e),B=a(e,"P",{});var Vs=l(B);Ei=p(Vs,`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),Vs.forEach(t),st=f(e),L=a(e,"P",{});var Ys=l(L);Ci=p(Ys,`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. Â Here are a few online
interpreters of interest for this classJS:`),Ys.forEach(t),ot=f(e),w=a(e,"UL",{});var Je=l(w);q=a(Je,"LI",{});var qs=l(q);_=a(qs,"A",{href:!0,rel:!0});var eo=l(_);Pi=p(eo,"JSAssembly"),eo.forEach(t),Si=p(qs," - an interpeter for x86 assembly codes"),qs.forEach(t),Ai=f(Je),F=a(Je,"LI",{});var Fs=l(F);E=a(Fs,"A",{href:!0,rel:!0});var to=l(E);gi=p(to,"JSNES"),to.forEach(t),Hi=p(Fs," - Great working interpreter for SNES ROM images"),Fs.forEach(t),ki=f(Je),j=a(Je,"LI",{});var js=l(j);C=a(js,"A",{href:!0,rel:!0});var io=l(C);Ii=p(io,"6502asm"),io.forEach(t),Di=p(js," - 6502 assembly code interpreter"),js.forEach(t),Je.forEach(t),rt=f(e),z=a(e,"P",{});var so=l(z);Ni=p(so,`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),so.forEach(t),at=f(e),O=a(e,"H2",{});var oo=l(O);Ti=p(oo,"Outside the Browser"),oo.forEach(t),lt=f(e),M=a(e,"P",{});var ro=l(M);xi=p(ro,"These courses are designed to teach specific software, and"),ro.forEach(t),nt=f(e),G=a(e,"H3",{});var ao=l(G);Bi=p(ao,"330 Advanced Data Structures"),ao.forEach(t),pt=f(e),W=a(e,"P",{});var lo=l(W);Li=p(lo,"Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),lo.forEach(t),mt=f(e),J=a(e,"H3",{});var no=l(J);qi=p(no,"339 Concepts of Programming Languages"),no.forEach(t),ft=f(e),R=a(e,"P",{});var po=l(R);Fi=p(po,"Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),po.forEach(t),ut=f(e),$=a(e,"H3",{});var mo=l($);ji=p(mo,"340 Software Engineering"),mo.forEach(t),ct=f(e),U=a(e,"P",{});var fo=l(U);zi=p(fo,"Practical and theoretical concepts of software engineering."),fo.forEach(t),dt=f(e),Z=a(e,"H3",{});var uo=l(Z);Oi=p(uo,"350 Foundations of Computer Science II"),uo.forEach(t),yt=f(e),Q=a(e,"P",{});var co=l(Q);Mi=p(co,"High level concepts in the theoretical foundations of computer science."),co.forEach(t),vt=f(e),X=a(e,"H3",{});var yo=l(X);Gi=p(yo,"463 Basic Systems Administration Laboratory"),yo.forEach(t),ht=f(e),K=a(e,"P",{});var vo=l(K);Wi=p(vo,"Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),vo.forEach(t),wt=f(e),V=a(e,"H3",{});var ho=l(V);Ji=p(ho,"464 Intermediate Systems Administration Laboratory"),ho.forEach(t),bt=f(e),Y=a(e,"P",{});var wo=l(Y);Ri=p(wo,"Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),wo.forEach(t),_t=f(e),ee=a(e,"H3",{});var bo=l(ee);$i=p(bo,"465 Advanced Systems Administration Laboratory"),bo.forEach(t),Et=f(e),te=a(e,"P",{});var _o=l(te);Ui=p(_o,"Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),_o.forEach(t),Ct=f(e),ie=a(e,"H3",{});var Eo=l(ie);Zi=p(Eo,"471 Principles of Database Systems"),Eo.forEach(t),Pt=f(e),se=a(e,"P",{});var Co=l(se);Qi=p(Co,"Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),Co.forEach(t),St=f(e),oe=a(e,"H3",{});var Po=l(oe);Xi=p(Po,"490 Senior Project"),Po.forEach(t),At=f(e),re=a(e,"P",{});var So=l(re);Ki=p(So,"Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),So.forEach(t),gt=f(e),ae=a(e,"H3",{});var Ao=l(ae);Vi=p(Ao,"493 Honors Work in Computer Science"),Ao.forEach(t),Ht=f(e),le=a(e,"P",{});var go=l(le);Yi=p(go,"Research in a topic of special interest at the Honors level."),go.forEach(t),kt=f(e),ne=a(e,"H3",{});var Ho=l(ne);es=p(Ho,"495 Selected Topics in Computer Science"),Ho.forEach(t),It=f(e),pe=a(e,"P",{});var ko=l(pe);ts=p(ko,`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),ko.forEach(t),Dt=f(e),me=a(e,"H3",{});var Io=l(me);is=p(Io,"521 Computer Graphics"),Io.forEach(t),Nt=f(e),fe=a(e,"P",{});var Do=l(fe);ss=p(Do,"Survey of graphics algorithms, data structures, and techniques."),Do.forEach(t),Tt=f(e),ue=a(e,"H3",{});var No=l(ue);os=p(No,"522 Digital Image Processing"),No.forEach(t),xt=f(e),ce=a(e,"P",{});var To=l(ce);rs=p(To,"Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),To.forEach(t),Bt=f(e),de=a(e,"H3",{});var xo=l(de);as=p(xo,"523 Numerical Analysis and Computing"),xo.forEach(t),Lt=f(e),ye=a(e,"P",{});var Bo=l(ye);ls=p(Bo,"Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),Bo.forEach(t),qt=f(e),ve=a(e,"H3",{});var Lo=l(ve);ns=p(Lo,"524 Numerical Analysis and Computing"),Lo.forEach(t),Ft=f(e),he=a(e,"P",{});var qo=l(he);ps=p(qo,"Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),qo.forEach(t),jt=f(e),we=a(e,"H3",{});var Fo=l(we);ms=p(Fo,"526 Bioinformatics"),Fo.forEach(t),zt=f(e),be=a(e,"P",{});var jo=l(be);fs=p(jo,"Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),jo.forEach(t),Ot=f(e),_e=a(e,"H3",{});var zo=l(_e);us=p(zo,"529 Artificial Intelligence"),zo.forEach(t),Mt=f(e),Ee=a(e,"P",{});var Oo=l(Ee);cs=p(Oo,"Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),Oo.forEach(t),Gt=f(e),Ce=a(e,"H3",{});var Mo=l(Ce);ds=p(Mo,"539 Introduction to Compiler Design"),Mo.forEach(t),Wt=f(e),Pe=a(e,"P",{});var Go=l(Pe);ys=p(Go,"Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Go.forEach(t),Jt=f(e),Se=a(e,"H3",{});var Wo=l(Se);vs=p(Wo,"540 Human-Computer Interface Development"),Wo.forEach(t),Rt=f(e),Ae=a(e,"P",{});var Jo=l(Ae);hs=p(Jo,"Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),Jo.forEach(t),$t=f(e),ge=a(e,"H3",{});var Ro=l(ge);ws=p(Ro,"550 Combinatorics on Words"),Ro.forEach(t),Ut=f(e),He=a(e,"P",{});var $o=l(He);bs=p($o,"Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),$o.forEach(t),Zt=f(e),ke=a(e,"H3",{});var Uo=l(ke);_s=p(Uo,"553 Theory of Computation"),Uo.forEach(t),Qt=f(e),Ie=a(e,"P",{});var Zo=l(Ie);Es=p(Zo,"Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Zo.forEach(t),Xt=f(e),De=a(e,"H3",{});var Qo=l(De);Cs=p(Qo,"555 Algorithm Analysis and Design"),Qo.forEach(t),Kt=f(e),Ne=a(e,"P",{});var Xo=l(Ne);Ps=p(Xo,"Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Xo.forEach(t),Vt=f(e),Te=a(e,"H3",{});var Ko=l(Te);Ss=p(Ko,"561 Principles of Computer Architecture"),Ko.forEach(t),Yt=f(e),xe=a(e,"P",{});var Vo=l(xe);As=p(Vo,"Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),Vo.forEach(t),ei=f(e),Be=a(e,"H3",{});var Yo=l(Be);gs=p(Yo,"562 Principles of Operating Systems"),Yo.forEach(t),ti=f(e),Le=a(e,"P",{});var er=l(Le);Hs=p(er,"Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),er.forEach(t),ii=f(e),qe=a(e,"H3",{});var tr=l(qe);ks=p(tr,"567 Principles of Computer Networks"),tr.forEach(t),si=f(e),Fe=a(e,"P",{});var ir=l(Fe);Is=p(ir,"Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),ir.forEach(t),oi=f(e),je=a(e,"H3",{});var sr=l(je);Ds=p(sr,"568 Principles of Wireless Networks"),sr.forEach(t),ri=f(e),ze=a(e,"P",{});var or=l(ze);Ns=p(or,"Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),or.forEach(t),ai=f(e),Oe=a(e,"H3",{});var rr=l(Oe);Ts=p(rr,"580 Cryptography and Security in Computing"),rr.forEach(t),li=f(e),Me=a(e,"P",{});var ar=l(Me);xs=p(ar,"Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),ar.forEach(t),ni=f(e),Ge=a(e,"H3",{});var lr=l(Ge);Bs=p(lr,"583 Firewall Architecture and Computer Security"),lr.forEach(t),pi=f(e),We=a(e,"P",{});var nr=l(We);Ls=p(nr,"Firewall hardware and software technologies. Architectures, protocols and their applications."),nr.forEach(t),this.h()},h(){Re(_,"href","http://http://timhatch.com/projects/jsassembly/"),Re(_,"rel","nofollow"),Re(E,"href","http://benfirshman.com/projects/jsnes/"),Re(E,"rel","nofollow"),Re(C,"href","http://6502asm.com/"),Re(C,"rel","nofollow")},m(e,i){s(e,u,i),o(u,y),s(e,v,i),s(e,h,i),o(h,c),s(e,d,i),s(e,b,i),o(b,mi),s(e,$e,i),s(e,S,i),o(S,fi),s(e,Ue,i),s(e,A,i),o(A,ui),s(e,Ze,i),s(e,g,i),o(g,ci),s(e,Qe,i),s(e,H,i),o(H,di),s(e,Xe,i),s(e,k,i),o(k,yi),s(e,Ke,i),s(e,I,i),o(I,vi),s(e,Ve,i),s(e,D,i),o(D,hi),s(e,Ye,i),s(e,N,i),o(N,wi),s(e,et,i),s(e,T,i),o(T,bi),s(e,tt,i),s(e,x,i),o(x,_i),s(e,it,i),s(e,B,i),o(B,Ei),s(e,st,i),s(e,L,i),o(L,Ci),s(e,ot,i),s(e,w,i),o(w,q),o(q,_),o(_,Pi),o(q,Si),o(w,Ai),o(w,F),o(F,E),o(E,gi),o(F,Hi),o(w,ki),o(w,j),o(j,C),o(C,Ii),o(j,Di),s(e,rt,i),s(e,z,i),o(z,Ni),s(e,at,i),s(e,O,i),o(O,Ti),s(e,lt,i),s(e,M,i),o(M,xi),s(e,nt,i),s(e,G,i),o(G,Bi),s(e,pt,i),s(e,W,i),o(W,Li),s(e,mt,i),s(e,J,i),o(J,qi),s(e,ft,i),s(e,R,i),o(R,Fi),s(e,ut,i),s(e,$,i),o($,ji),s(e,ct,i),s(e,U,i),o(U,zi),s(e,dt,i),s(e,Z,i),o(Z,Oi),s(e,yt,i),s(e,Q,i),o(Q,Mi),s(e,vt,i),s(e,X,i),o(X,Gi),s(e,ht,i),s(e,K,i),o(K,Wi),s(e,wt,i),s(e,V,i),o(V,Ji),s(e,bt,i),s(e,Y,i),o(Y,Ri),s(e,_t,i),s(e,ee,i),o(ee,$i),s(e,Et,i),s(e,te,i),o(te,Ui),s(e,Ct,i),s(e,ie,i),o(ie,Zi),s(e,Pt,i),s(e,se,i),o(se,Qi),s(e,St,i),s(e,oe,i),o(oe,Xi),s(e,At,i),s(e,re,i),o(re,Ki),s(e,gt,i),s(e,ae,i),o(ae,Vi),s(e,Ht,i),s(e,le,i),o(le,Yi),s(e,kt,i),s(e,ne,i),o(ne,es),s(e,It,i),s(e,pe,i),o(pe,ts),s(e,Dt,i),s(e,me,i),o(me,is),s(e,Nt,i),s(e,fe,i),o(fe,ss),s(e,Tt,i),s(e,ue,i),o(ue,os),s(e,xt,i),s(e,ce,i),o(ce,rs),s(e,Bt,i),s(e,de,i),o(de,as),s(e,Lt,i),s(e,ye,i),o(ye,ls),s(e,qt,i),s(e,ve,i),o(ve,ns),s(e,Ft,i),s(e,he,i),o(he,ps),s(e,jt,i),s(e,we,i),o(we,ms),s(e,zt,i),s(e,be,i),o(be,fs),s(e,Ot,i),s(e,_e,i),o(_e,us),s(e,Mt,i),s(e,Ee,i),o(Ee,cs),s(e,Gt,i),s(e,Ce,i),o(Ce,ds),s(e,Wt,i),s(e,Pe,i),o(Pe,ys),s(e,Jt,i),s(e,Se,i),o(Se,vs),s(e,Rt,i),s(e,Ae,i),o(Ae,hs),s(e,$t,i),s(e,ge,i),o(ge,ws),s(e,Ut,i),s(e,He,i),o(He,bs),s(e,Zt,i),s(e,ke,i),o(ke,_s),s(e,Qt,i),s(e,Ie,i),o(Ie,Es),s(e,Xt,i),s(e,De,i),o(De,Cs),s(e,Kt,i),s(e,Ne,i),o(Ne,Ps),s(e,Vt,i),s(e,Te,i),o(Te,Ss),s(e,Yt,i),s(e,xe,i),o(xe,As),s(e,ei,i),s(e,Be,i),o(Be,gs),s(e,ti,i),s(e,Le,i),o(Le,Hs),s(e,ii,i),s(e,qe,i),o(qe,ks),s(e,si,i),s(e,Fe,i),o(Fe,Is),s(e,oi,i),s(e,je,i),o(je,Ds),s(e,ri,i),s(e,ze,i),o(ze,Ns),s(e,ai,i),s(e,Oe,i),o(Oe,Ts),s(e,li,i),s(e,Me,i),o(Me,xs),s(e,ni,i),s(e,Ge,i),o(Ge,Bs),s(e,pi,i),s(e,We,i),o(We,Ls)},p:Cr,d(e){e&&t(u),e&&t(v),e&&t(h),e&&t(d),e&&t(b),e&&t($e),e&&t(S),e&&t(Ue),e&&t(A),e&&t(Ze),e&&t(g),e&&t(Qe),e&&t(H),e&&t(Xe),e&&t(k),e&&t(Ke),e&&t(I),e&&t(Ve),e&&t(D),e&&t(Ye),e&&t(N),e&&t(et),e&&t(T),e&&t(tt),e&&t(x),e&&t(it),e&&t(B),e&&t(st),e&&t(L),e&&t(ot),e&&t(w),e&&t(rt),e&&t(z),e&&t(at),e&&t(O),e&&t(lt),e&&t(M),e&&t(nt),e&&t(G),e&&t(pt),e&&t(W),e&&t(mt),e&&t(J),e&&t(ft),e&&t(R),e&&t(ut),e&&t($),e&&t(ct),e&&t(U),e&&t(dt),e&&t(Z),e&&t(yt),e&&t(Q),e&&t(vt),e&&t(X),e&&t(ht),e&&t(K),e&&t(wt),e&&t(V),e&&t(bt),e&&t(Y),e&&t(_t),e&&t(ee),e&&t(Et),e&&t(te),e&&t(Ct),e&&t(ie),e&&t(Pt),e&&t(se),e&&t(St),e&&t(oe),e&&t(At),e&&t(re),e&&t(gt),e&&t(ae),e&&t(Ht),e&&t(le),e&&t(kt),e&&t(ne),e&&t(It),e&&t(pe),e&&t(Dt),e&&t(me),e&&t(Nt),e&&t(fe),e&&t(Tt),e&&t(ue),e&&t(xt),e&&t(ce),e&&t(Bt),e&&t(de),e&&t(Lt),e&&t(ye),e&&t(qt),e&&t(ve),e&&t(Ft),e&&t(he),e&&t(jt),e&&t(we),e&&t(zt),e&&t(be),e&&t(Ot),e&&t(_e),e&&t(Mt),e&&t(Ee),e&&t(Gt),e&&t(Ce),e&&t(Wt),e&&t(Pe),e&&t(Jt),e&&t(Se),e&&t(Rt),e&&t(Ae),e&&t($t),e&&t(ge),e&&t(Ut),e&&t(He),e&&t(Zt),e&&t(ke),e&&t(Qt),e&&t(Ie),e&&t(Xt),e&&t(De),e&&t(Kt),e&&t(Ne),e&&t(Vt),e&&t(Te),e&&t(Yt),e&&t(xe),e&&t(ei),e&&t(Be),e&&t(ti),e&&t(Le),e&&t(ii),e&&t(qe),e&&t(si),e&&t(Fe),e&&t(oi),e&&t(je),e&&t(ri),e&&t(ze),e&&t(ai),e&&t(Oe),e&&t(li),e&&t(Me),e&&t(ni),e&&t(Ge),e&&t(pi),e&&t(We)}}}function Ar(P){let u,y;const v=[P[0],fr];let h={$$slots:{default:[Sr]},$$scope:{ctx:P}};for(let c=0;c<v.length;c+=1)h=zs(h,v[c]);return u=new Pr({props:h}),{c(){yr(u.$$.fragment)},l(c){vr(u.$$.fragment,c)},m(c,d){hr(u,c,d),y=!0},p(c,[d]){const b=d&1?wr(v,[d&1&&pr(c[0]),d&0&&pr(fr)]):{};d&2&&(b.$$scope={dirty:d,ctx:c}),u.$set(b)},i(c){y||(br(u.$$.fragment,c),y=!0)},o(c){_r(u.$$.fragment,c),y=!1},d(c){Er(u,c)}}}const fr={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Teaching Computer Science in a Web Browser?",description:"Ideas on how to teach CSC courses using only a web browser",excerpt:null,cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["programming"],tags:["Education","Online Education"],created_at:"2010-06-02T21:48:00.000Z",updated_at:"2010-06-02T21:48:00.000Z"};function gr(P,u,y){return P.$$set=v=>{y(0,u=zs(zs({},u),mr(v)))},u=mr(u),[u]}class Ir extends ur{constructor(u){super(),cr(this,u,gr,Ar,dr,{})}}export{Ir as default,fr as metadata};
