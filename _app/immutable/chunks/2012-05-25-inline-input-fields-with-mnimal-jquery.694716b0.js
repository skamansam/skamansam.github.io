import{s as F,r as I,B as b,f,a as y,g as h,C as x,c as _,h as j,d as t,j as C,i as c,y as L}from"./scheduler.28ea7184.js";import{S as R,i as W,b as z,d as M,m as A,a as B,t as Z,e as D}from"./index.8021bc93.js";import{g as G,a as E}from"./spread.8a54911c.js";import{P as J}from"./post.c0381be7.js";function K(m){let a,u=`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I add:`,l,o,s=`<code class="language-css"><span class="token selector">input.hidden</span><span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span>
<span class="token selector">h2</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #648dd7<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>​</code>`,p,i,S="and in my html, I have:",g,r,Q='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myInput<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[Header Input]<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code>',v,k,$="And here is the fun part. Essentially one line of javascript to accomplish this easy feat:",w,d,H=`<code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input.hidden'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span>
                      <span class="token string">'blur'</span><span class="token punctuation">,</span>
                      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>
                  <span class="token punctuation">)</span>
                <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span>​<span class="token punctuation">;</span></code>`;return{c(){a=f("p"),a.textContent=u,l=y(),o=f("pre"),p=y(),i=f("p"),i.textContent=S,g=y(),r=f("pre"),v=y(),k=f("p"),k.textContent=$,w=y(),d=f("pre"),this.h()},l(n){a=h(n,"P",{["data-svelte-h"]:!0}),x(a)!=="svelte-1hfx6ig"&&(a.textContent=u),l=_(n),o=h(n,"PRE",{class:!0});var e=j(o);e.forEach(t),p=_(n),i=h(n,"P",{["data-svelte-h"]:!0}),x(i)!=="svelte-teb07m"&&(i.textContent=S),g=_(n),r=h(n,"PRE",{class:!0});var q=j(r);q.forEach(t),v=_(n),k=h(n,"P",{["data-svelte-h"]:!0}),x(k)!=="svelte-razpx"&&(k.textContent=$),w=_(n),d=h(n,"PRE",{class:!0});var T=j(d);T.forEach(t),this.h()},h(){C(o,"class","language-css"),C(r,"class","language-html"),C(d,"class","language-javascript")},m(n,e){c(n,a,e),c(n,l,e),c(n,o,e),o.innerHTML=s,c(n,p,e),c(n,i,e),c(n,g,e),c(n,r,e),r.innerHTML=Q,c(n,v,e),c(n,k,e),c(n,w,e),c(n,d,e),d.innerHTML=H},p:L,d(n){n&&(t(a),t(l),t(o),t(p),t(i),t(g),t(r),t(v),t(k),t(w),t(d))}}}function N(m){let a,u;const l=[m[0],P];let o={$$slots:{default:[K]},$$scope:{ctx:m}};for(let s=0;s<l.length;s+=1)o=I(o,l[s]);return a=new J({props:o}),{c(){z(a.$$.fragment)},l(s){M(a.$$.fragment,s)},m(s,p){A(a,s,p),u=!0},p(s,[p]){const i=p&1?G(l,[p&1&&E(s[0]),p&0&&E(P)]):{};p&2&&(i.$$scope={dirty:p,ctx:s}),a.$set(i)},i(s){u||(B(a.$$.fragment,s),u=!0)},o(s){Z(a.$$.fragment,s),u=!1},d(s){D(a,s)}}}const P={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Inline input fields with minimal jQuery",description:"Create an inline edit field with one line of jQuery",excerpt:"Essentially one line of javascript to accomplish this easy feat",cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["web-development"],tags:["jQuery"],created_at:"2012-05-25T14:46:00.000Z",updated_at:"2012-05-25T14:46:00.000Z",preview:`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it...`,previewHtml:"<p>For one of my projects, i needed to put a text field inside a header element. When I did so, the input field ruined my layout and good looks! So I went the jQuery way and devised a method for hiding inputs when not in use, but when clicking on it, tu...</p>",textContent:`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I...`};function O(m,a,u){return m.$$set=l=>{u(0,a=I(I({},a),b(l)))},a=b(a),[a]}class nn extends R{constructor(a){super(),W(this,a,O,N,F,{})}}export{nn as default,P as metadata};
