import{S as Z,i as B,s as F,C as P,w as W,x as G,y as K,H as D,Z as H,f as J,t as N,z as O,K as Q,k as m,q as I,a as y,l as _,m as h,r as $,h as t,c as v,n as S,b as c,G as b,B as U}from"./index-6a3f2268.js";import{P as V}from"./post-3c5a9cb3.js";function X(d){let s,l,u,o,a=`<code class="language-css"><span class="token selector">input.hidden</span><span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span>
<span class="token selector">h2</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #648dd7<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>​</code>`,e,i,j,g,r,L='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>Header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myInput<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>[Header Input]<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span></code>',w,f,E,x,k,R=`<code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'input.hidden'</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span><span class="token string">'focus'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
                  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span>
                  <span class="token punctuation">.</span><span class="token function">live</span><span class="token punctuation">(</span>
                      <span class="token string">'blur'</span><span class="token punctuation">,</span>
                      <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'hidden'</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>
                  <span class="token punctuation">)</span>
                <span class="token punctuation">&#125;</span>
  <span class="token punctuation">)</span>​<span class="token punctuation">;</span></code>`;return{c(){s=m("p"),l=I(`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I add:`),u=y(),o=m("pre"),e=y(),i=m("p"),j=I("and in my html, I have:"),g=y(),r=m("pre"),w=y(),f=m("p"),E=I("And here is the fun part. Essentially one line of javascript to accomplish this easy feat:"),x=y(),k=m("pre"),this.h()},l(n){s=_(n,"P",{});var p=h(s);l=$(p,`For one of my projects, i needed to put a text field inside a header element.
When I did so, the input field ruined my layout and good looks! So I went the
jQuery way and devised a method for hiding inputs when not in use, but when
clicking on it, turns into a normal input field. So in my CSS, I add:`),p.forEach(t),u=v(n),o=_(n,"PRE",{class:!0});var z=h(o);z.forEach(t),e=v(n),i=_(n,"P",{});var C=h(i);j=$(C,"and in my html, I have:"),C.forEach(t),g=v(n),r=_(n,"PRE",{class:!0});var A=h(r);A.forEach(t),w=v(n),f=_(n,"P",{});var q=h(f);E=$(q,"And here is the fun part. Essentially one line of javascript to accomplish this easy feat:"),q.forEach(t),x=v(n),k=_(n,"PRE",{class:!0});var M=h(k);M.forEach(t),this.h()},h(){S(o,"class","language-css"),S(r,"class","language-html"),S(k,"class","language-javascript")},m(n,p){c(n,s,p),b(s,l),c(n,u,p),c(n,o,p),o.innerHTML=a,c(n,e,p),c(n,i,p),b(i,j),c(n,g,p),c(n,r,p),r.innerHTML=L,c(n,w,p),c(n,f,p),b(f,E),c(n,x,p),c(n,k,p),k.innerHTML=R},p:U,d(n){n&&t(s),n&&t(u),n&&t(o),n&&t(e),n&&t(i),n&&t(g),n&&t(r),n&&t(w),n&&t(f),n&&t(x),n&&t(k)}}}function Y(d){let s,l;const u=[d[0],T];let o={$$slots:{default:[X]},$$scope:{ctx:d}};for(let a=0;a<u.length;a+=1)o=P(o,u[a]);return s=new V({props:o}),{c(){W(s.$$.fragment)},l(a){G(s.$$.fragment,a)},m(a,e){K(s,a,e),l=!0},p(a,[e]){const i=e&1?D(u,[e&1&&H(a[0]),e&0&&H(T)]):{};e&2&&(i.$$scope={dirty:e,ctx:a}),s.$set(i)},i(a){l||(J(s.$$.fragment,a),l=!0)},o(a){N(s.$$.fragment,a),l=!1},d(a){O(s,a)}}}const T={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Inline input fields with minimal jQuery",description:"Create an inline edit field with one line of jQuery",excerpt:"Essentially one line of javascript to accomplish this easy feat",cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["web-development"],tags:["jQuery"],created_at:"2012-05-25T14:46:00.000Z",updated_at:"2012-05-25T14:46:00.000Z"};function nn(d,s,l){return d.$$set=u=>{l(0,s=P(P({},s),Q(u)))},s=Q(s),[s]}class tn extends Z{constructor(s){super(),B(this,s,nn,Y,F,{})}}export{tn as default,T as metadata};
