import{S as R,i as j,s as D,C as U,y as O,z as Z,A as F,H as J,$ as z,g as K,d as Q,B as V,L as B,k as d,q as v,a as E,l as h,m as g,r as w,h as s,c as $,n as T,b as i,G as u,I as X}from"./index.37f37dfa.js";import{P as ee}from"./post.47922bc8.js";function te(P){let t,r,c,n,a=`<code class="language-perl">perl <span class="token operator">-</span>MCPANPLUS <span class="token operator">-e</span> <span class="token string">'shell(Wx)'</span></code>`,l,p,k,S,m,A,x,I,b,C,_,L,f,N;return{c(){t=d("p"),r=v("I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),c=E(),n=d("pre"),l=E(),p=d("p"),k=v("I have created a perl script for testing this."),S=E(),m=d("p"),A=v("I have also created a new svn branch, "),x=d("code"),I=v("development"),b=v(". This is the current working branch."),C=E(),_=d("p"),L=v("You can view or download my current development code, via svn. "),f=d("a"),N=v(`See the googlecode
svn repo here`),this.h()},l(e){t=h(e,"P",{});var o=g(t);r=w(o,"I have successfully managed to implement a CPANPLUS::Shell.  You call the shell like:"),o.forEach(s),c=$(e),n=h(e,"PRE",{class:!0});var M=g(n);M.forEach(s),l=$(e),p=h(e,"P",{});var Y=g(p);k=w(Y,"I have created a perl script for testing this."),Y.forEach(s),S=$(e),m=h(e,"P",{});var y=g(m);A=w(y,"I have also created a new svn branch, "),x=h(y,"CODE",{});var W=g(x);I=w(W,"development"),W.forEach(s),b=w(y,". This is the current working branch."),y.forEach(s),C=$(e),_=h(e,"P",{});var G=g(_);L=w(G,"You can view or download my current development code, via svn. "),f=h(G,"A",{href:!0,rel:!0});var q=g(f);N=w(q,`See the googlecode
svn repo here`),q.forEach(s),G.forEach(s),this.h()},h(){T(n,"class","language-perl"),T(f,"href","http://code.google.com/p/wxcpan/source/browse"),T(f,"rel","nofollow")},m(e,o){i(e,t,o),u(t,r),i(e,c,o),i(e,n,o),n.innerHTML=a,i(e,l,o),i(e,p,o),u(p,k),i(e,S,o),i(e,m,o),u(m,A),u(m,x),u(x,I),u(m,b),i(e,C,o),i(e,_,o),u(_,L),u(_,f),u(f,N)},p:X,d(e){e&&s(t),e&&s(c),e&&s(n),e&&s(l),e&&s(p),e&&s(S),e&&s(m),e&&s(C),e&&s(_)}}}function ae(P){let t,r;const c=[P[0],H];let n={$$slots:{default:[te]},$$scope:{ctx:P}};for(let a=0;a<c.length;a+=1)n=U(n,c[a]);return t=new ee({props:n}),{c(){O(t.$$.fragment)},l(a){Z(t.$$.fragment,a)},m(a,l){F(t,a,l),r=!0},p(a,[l]){const p=l&1?J(c,[l&1&&z(a[0]),l&0&&z(H)]):{};l&2&&(p.$$scope={dirty:l,ctx:a}),t.$set(p)},i(a){r||(K(t.$$.fragment,a),r=!0)},o(a){Q(t.$$.fragment,a),r=!1},d(a){V(t,a)}}}const H={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"wxCPAN Going Well",description:"wxCPAN Going Well",excerpt:"I have successfully managed to implement a CPANPLUS::Shell.",cover:!1,coverImage:"/images/GSoC-logo-horizontal-800.png",coverAlt:"RBE Logo",categories:["perl"],tags:["gSoC"],created_at:"2008-05-13 14:56",updated_at:"2022-11-11T03:50:25.290Z"};function se(P,t,r){return P.$$set=c=>{r(0,t=U(U({},t),B(c)))},t=B(t),[t]}class ne extends R{constructor(t){super(),j(this,t,se,ae,D,{})}}export{ne as default,H as metadata};
