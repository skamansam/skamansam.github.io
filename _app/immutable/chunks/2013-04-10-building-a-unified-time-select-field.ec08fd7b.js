import{s as E,r as T,B as F,f as u,a as g,g as m,C as w,c as y,h as L,d as e,j as P,i as o,y as O}from"./scheduler.28ea7184.js";import{S as Z,i as z,b as U,d as D,m as G,a as J,t as K,e as N}from"./index.8021bc93.js";import{g as Q,a as V}from"./spread.8a54911c.js";import{P as W}from"./post.d4e0232c.js";function X(b){let a,r=`Before I migrated to Rails 3.2, I used a plugin to provide a unified input field
for time_select with either the standard Rails ActionView or the SimpleForm gem
(SimpleForm uses ActionView under the hood). I was happy until the Rails upgrade
caused my gem to inexplicably stop working. I had a deadline to meet and could
not be bothered with complicated solutions. I searched and searched for
alternatives to this fine gem, but none were found. Then it hit me: why not just
write my own code and replace the inputs with my own code? Surely it can't take
too long to build a time input based on the simple_time_select gem! So here it
is: my simple version of the gem, with only a few modifications from the
simple_time_select gem.`,i,l,n=`Here is my old code, utilizing simple_time_select. The gem is used only
if <code>:simple_time_select</code> is true, and it uses the <code>:minute_interval</code>,
<code>:time_separator</code>, <code>:start_hour</code>, <code>:end_hour</code>, and a host of other options for setting
the times. I wish it had a way for specifying just a start_time and end_time.`,p,c,B=`<code class="language-ruby"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string-literal"><span class="token string">"field"</span></span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">%=</span> f<span class="token punctuation">.</span>input <span class="token symbol">:start_time</span><span class="token punctuation">,</span>
              <span class="token symbol">:label</span><span class="token operator">=></span><span class="token string-literal"><span class="token string">"Start Time:"</span></span><span class="token punctuation">,</span>
              <span class="token symbol">:default</span><span class="token operator">=></span>appt<span class="token punctuation">.</span>start_time<span class="token punctuation">,</span>
              <span class="token symbol">:wrapper</span><span class="token operator">=></span><span class="token boolean">false</span><span class="token punctuation">,</span>
              <span class="token symbol">:simple_time_select</span> <span class="token operator">=></span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token symbol">:label_html</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token symbol">:class</span><span class="token operator">=></span><span class="token string-literal"><span class="token string">"head"</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
              <span class="token symbol">:minute_interval</span> <span class="token operator">=></span> <span class="token number">5</span><span class="token punctuation">,</span>
              <span class="token symbol">:time_separator</span> <span class="token operator">=></span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span>
              <span class="token symbol">:start_hour</span> <span class="token operator">=></span> <span class="token number">06</span><span class="token punctuation">,</span>
              <span class="token symbol">:end_hour</span> <span class="token operator">=></span> <span class="token number">17</span>
   <span class="token string-literal"><span class="token string">%>
&lt;/div></span></span></code>`,v,k,C=`I had to search for an algorithm to use for the periodicity, and settled on the
algorithm discussed in <a href="http://stackoverflow.com/questions/6783589/display-15-minute-steps-between-two-given-times" title="">this discussion on Stack
Overflow</a>,
and is inlined as the :collection option. Since the :default option removes the
inital blank I wanted as the first item in the list, I has to add a blank
<code>:include_blank</code> option.`,x,d,q=`<code class="language-ruby"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string-literal"><span class="token string">"field"</span></span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token string-literal"><span class="token string">%- time_start = Time.now.change(:hour=>6,:minute=>0) %>
  &lt;%-</span></span> time_end <span class="token operator">=</span> <span class="token builtin">Time</span><span class="token punctuation">.</span>now<span class="token punctuation">.</span>change<span class="token punctuation">(</span><span class="token symbol">:hour</span><span class="token operator">=></span><span class="token number">17</span><span class="token punctuation">,</span><span class="token symbol">:minute</span><span class="token operator">=></span><span class="token number">55</span><span class="token punctuation">)</span> <span class="token string-literal"><span class="token string">%>
  &lt;%- period = 5.minutes %></span></span>
  <span class="token operator">&lt;</span><span class="token operator">%=</span> f<span class="token punctuation">.</span>input <span class="token symbol">:start_time</span><span class="token punctuation">,</span>
           <span class="token symbol">:as</span><span class="token operator">=></span><span class="token symbol">:collection_select</span><span class="token punctuation">,</span>
           <span class="token symbol">:required</span><span class="token operator">=></span><span class="token boolean">true</span><span class="token punctuation">,</span>
           <span class="token symbol">:include_blank</span> <span class="token operator">=></span> <span class="token string-literal"><span class="token string">''</span></span><span class="token punctuation">,</span>
           <span class="token symbol">:selected</span><span class="token operator">=></span><span class="token punctuation">(</span>
             f<span class="token punctuation">.</span>object<span class="token punctuation">.</span>start_time<span class="token punctuation">.</span>blank<span class="token operator">?</span> <span class="token operator">?</span>
               <span class="token string-literal"><span class="token string">""</span></span> <span class="token operator">:</span> f<span class="token punctuation">.</span>object<span class="token punctuation">.</span>start_time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"%H:%M"</span></span><span class="token punctuation">)</span>
           <span class="token punctuation">)</span><span class="token punctuation">,</span>
           <span class="token symbol">:input_html</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>
             <span class="token symbol">:name</span><span class="token operator">=></span><span class="token string-literal"><span class="token string">"appt[start_time(5i)]"</span></span><span class="token punctuation">,</span>
             <span class="token symbol">:id</span><span class="token operator">=></span><span class="token string-literal"><span class="token string">"appt_start_time_5i"</span></span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
           <span class="token symbol">:collection</span><span class="token operator">=></span> <span class="token punctuation">(</span>
             <span class="token punctuation">[</span>time_start<span class="token punctuation">]</span><span class="token punctuation">.</span>tap<span class="token punctuation">&#123;</span>
               <span class="token operator">|</span>array<span class="token operator">|</span> array <span class="token operator">&lt;&lt;</span> array<span class="token punctuation">.</span>last <span class="token operator">+</span> period
                 <span class="token keyword">while</span> array<span class="token punctuation">.</span>last <span class="token operator">&lt;</span> time_end
             <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map<span class="token punctuation">&#123;</span>
               <span class="token operator">|</span>t<span class="token operator">|</span> <span class="token punctuation">[</span>t<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"%l:%M %p"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"%H:%M"</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span>
             <span class="token punctuation">&#125;</span>
   <span class="token string-literal"><span class="token string">%>
&lt;/div></span></span></code>`,I,h,H=`I am sure you can wrap this in a Helper class somewhere, and it should be easy
to monkeypatch ActiveView or SimpleForm to display this instead of the default.`,R,_,M="References:",S,f,A='<li><a href="http://stackoverflow.com/questions/6783589/display-15-minute-steps-between-two-given-times" title="">Stack Overflow discussion on time periodicity in Rails</a> (used for periodicity algorithm)</li> <li><a href="http://www.tonyamoyal.com/2009/04/21/simple-time-select-the-most-compact-time_select-for-ruby-on-rails/" title="">Tutorial on using simple_time_select</a></li> <li><a href="https://github.com/plataformatec/simple_form" title="">SimpleForm gem</a></li> <li><a href="https://github.com/tamoyal/simple_time_select" title="">simple_time_select gem</a></li>';return{c(){a=u("p"),a.textContent=r,i=g(),l=u("p"),l.innerHTML=n,p=g(),c=u("pre"),v=g(),k=u("p"),k.innerHTML=C,x=g(),d=u("pre"),I=g(),h=u("p"),h.textContent=H,R=g(),_=u("p"),_.textContent=M,S=g(),f=u("ul"),f.innerHTML=A,this.h()},l(s){a=m(s,"P",{["data-svelte-h"]:!0}),w(a)!=="svelte-rkm9ir"&&(a.textContent=r),i=y(s),l=m(s,"P",{["data-svelte-h"]:!0}),w(l)!=="svelte-1x8mycb"&&(l.innerHTML=n),p=y(s),c=m(s,"PRE",{class:!0});var t=L(c);t.forEach(e),v=y(s),k=m(s,"P",{["data-svelte-h"]:!0}),w(k)!=="svelte-1iwor8b"&&(k.innerHTML=C),x=y(s),d=m(s,"PRE",{class:!0});var j=L(d);j.forEach(e),I=y(s),h=m(s,"P",{["data-svelte-h"]:!0}),w(h)!=="svelte-yquq28"&&(h.textContent=H),R=y(s),_=m(s,"P",{["data-svelte-h"]:!0}),w(_)!=="svelte-k74mug"&&(_.textContent=M),S=y(s),f=m(s,"UL",{["data-svelte-h"]:!0}),w(f)!=="svelte-fxs0qa"&&(f.innerHTML=A),this.h()},h(){P(c,"class","language-ruby"),P(d,"class","language-ruby")},m(s,t){o(s,a,t),o(s,i,t),o(s,l,t),o(s,p,t),o(s,c,t),c.innerHTML=B,o(s,v,t),o(s,k,t),o(s,x,t),o(s,d,t),d.innerHTML=q,o(s,I,t),o(s,h,t),o(s,R,t),o(s,_,t),o(s,S,t),o(s,f,t)},p:O,d(s){s&&(e(a),e(i),e(l),e(p),e(c),e(v),e(k),e(x),e(d),e(I),e(h),e(R),e(_),e(S),e(f))}}}function Y(b){let a,r;const i=[b[0],$];let l={$$slots:{default:[X]},$$scope:{ctx:b}};for(let n=0;n<i.length;n+=1)l=T(l,i[n]);return a=new W({props:l}),{c(){U(a.$$.fragment)},l(n){D(a.$$.fragment,n)},m(n,p){G(a,n,p),r=!0},p(n,[p]){const c=p&1?Q(i,[p&1&&V(n[0]),p&0&&V($)]):{};p&2&&(c.$$scope={dirty:p,ctx:n}),a.$set(c)},i(n){r||(J(a.$$.fragment,n),r=!0)},o(n){K(a.$$.fragment,n),r=!1},d(n){N(a,n)}}}const $={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Building a unified `time_select` field",description:"Build a unified `time_select` field",excerpt:"I was happy until the Rails upgrade caused my gem to inexplicably stop working.",cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["ruby"],tags:["Ruby on Rails"],created_at:"2013-04-10T11:10:11.000Z",updated_at:"2013-04-10T11:10:11.000Z",preview:`Before I migrated to Rails 3.2, I used a plugin to provide a unified input field
for time_select with either the standard Rails ActionView or the SimpleForm gem
(SimpleForm uses ActionView under the hood). I was happy until the Rails upgrade
caused...`,previewHtml:"<p>Before I migrated to Rails 3.2, I used a plugin to provide a unified input field for time_select with either the standard Rails ActionView or the SimpleForm gem (SimpleForm uses ActionView under the hood). I was happy until the Rails upgrade caused m...</p>",textContent:`Before I migrated to Rails 3.2, I used a plugin to provide a unified input field
for time_select with either the standard Rails ActionView or the SimpleForm gem
(SimpleForm uses ActionView under the hood). I was happy until the Rails upgrade
caused my gem to inexplicably stop working. I had a...`};function ss(b,a,r){return b.$$set=i=>{r(0,a=T(T({},a),F(i)))},a=F(a),[a]}class os extends Z{constructor(a){super(),z(this,a,ss,Y,E,{})}}export{os as default,$ as metadata};
