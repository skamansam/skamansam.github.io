import{S as cr,i as fr,s as dr,C as Ms,y as yr,z as hr,A as vr,H as wr,a0 as pr,g as br,d as _r,B as gr,L as mr,k as r,q as l,a as m,l as a,m as n,r as p,h as t,c as u,n as c,b as s,G as o,I as Er}from"./index.8495bde4.js";import{P as Cr}from"./post.98a719d8.js";function Pr(ae){let f,v,w,h,d,y,b,mi,$e,g,ui,Ue,E,ci,Qe,ne,fi,Xe,C,di,Ze,P,yi,Ke,S,hi,Ve,le,vi,Ye,A,wi,et,pe,bi,tt,H,_i,it,me,gi,st,ue,Ei,ot,_,ce,k,Ci,Pi,Si,fe,I,Ai,Hi,ki,de,T,Ii,Ti,rt,ye,Di,at,D,Ni,nt,he,Li,lt,N,xi,pt,ve,Bi,mt,L,Fi,ut,we,qi,ct,x,ji,ft,be,Mi,dt,B,zi,yt,_e,Oi,ht,F,Gi,vt,ge,Wi,wt,q,Ji,bt,Ee,Ri,_t,j,$i,gt,Ce,Ui,Et,M,Qi,Ct,Pe,Xi,Pt,z,Zi,St,Se,Ki,At,O,Vi,Ht,Ae,Yi,kt,G,es,It,He,ts,Tt,W,is,Dt,ke,ss,Nt,J,os,Lt,Ie,rs,xt,R,as,Bt,Te,ns,Ft,$,ls,qt,De,ps,jt,U,ms,Mt,Ne,us,zt,Q,cs,Ot,Le,fs,Gt,X,ds,Wt,xe,ys,Jt,Z,hs,Rt,Be,vs,$t,K,ws,Ut,Fe,bs,Qt,V,_s,Xt,qe,gs,Zt,Y,Es,Kt,je,Cs,Vt,ee,Ps,Yt,Me,Ss,ei,te,As,ti,ze,Hs,ii,ie,ks,si,Oe,Is,oi,se,Ts,ri,Ge,Ds,ai,oe,Ns,ni,We,Ls,li,re,xs,pi,Je,Bs;return{c(){f=r("p"),v=l(`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic "Outside the Browser"`),w=m(),h=r("h2"),d=l("General Programming Courses"),y=m(),b=r("h2"),mi=l("Graphics"),$e=m(),g=r("h2"),ui=l("Algorithms"),Ue=m(),E=r("h3"),ci=l("230 Elementary Data Structures and Algorithms"),Qe=m(),ne=r("p"),fi=l(`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Xe=m(),C=r("h2"),di=l("Networking"),Ze=m(),P=r("h2"),yi=l("Math-Based Courses"),Ke=m(),S=r("h3"),hi=l("250 Foundations of Computer Science I"),Ve=m(),le=r("p"),vi=l(`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Ye=m(),A=r("h2"),wi=l("Hardware"),et=m(),pe=r("p"),bi=l("These classes are designed to teach specific hardware concepts"),tt=m(),H=r("h3"),_i=l("261 Computer Organization and Assembly Language"),it=m(),me=r("p"),gi=l(`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),st=m(),ue=r("p"),Ei=l(`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. Â Here are a few online
interpreters of interest for this classJS:`),ot=m(),_=r("ul"),ce=r("li"),k=r("a"),Ci=l("JSAssembly"),Pi=l(" - an interpeter for x86 assembly codes"),Si=m(),fe=r("li"),I=r("a"),Ai=l("JSNES"),Hi=l(" - Great working interpreter for SNES ROM images"),ki=m(),de=r("li"),T=r("a"),Ii=l("6502asm"),Ti=l(" - 6502 assembly code interpreter"),rt=m(),ye=r("p"),Di=l(`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),at=m(),D=r("h2"),Ni=l("Outside the Browser"),nt=m(),he=r("p"),Li=l("These courses are designed to teach specific software, and"),lt=m(),N=r("h3"),xi=l("330 Advanced Data Structures"),pt=m(),ve=r("p"),Bi=l("Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),mt=m(),L=r("h3"),Fi=l("339 Concepts of Programming Languages"),ut=m(),we=r("p"),qi=l("Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),ct=m(),x=r("h3"),ji=l("340 Software Engineering"),ft=m(),be=r("p"),Mi=l("Practical and theoretical concepts of software engineering."),dt=m(),B=r("h3"),zi=l("350 Foundations of Computer Science II"),yt=m(),_e=r("p"),Oi=l("High level concepts in the theoretical foundations of computer science."),ht=m(),F=r("h3"),Gi=l("463 Basic Systems Administration Laboratory"),vt=m(),ge=r("p"),Wi=l("Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),wt=m(),q=r("h3"),Ji=l("464 Intermediate Systems Administration Laboratory"),bt=m(),Ee=r("p"),Ri=l("Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),_t=m(),j=r("h3"),$i=l("465 Advanced Systems Administration Laboratory"),gt=m(),Ce=r("p"),Ui=l("Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),Et=m(),M=r("h3"),Qi=l("471 Principles of Database Systems"),Ct=m(),Pe=r("p"),Xi=l("Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),Pt=m(),z=r("h3"),Zi=l("490 Senior Project"),St=m(),Se=r("p"),Ki=l("Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),At=m(),O=r("h3"),Vi=l("493 Honors Work in Computer Science"),Ht=m(),Ae=r("p"),Yi=l("Research in a topic of special interest at the Honors level."),kt=m(),G=r("h3"),es=l("495 Selected Topics in Computer Science"),It=m(),He=r("p"),ts=l(`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),Tt=m(),W=r("h3"),is=l("521 Computer Graphics"),Dt=m(),ke=r("p"),ss=l("Survey of graphics algorithms, data structures, and techniques."),Nt=m(),J=r("h3"),os=l("522 Digital Image Processing"),Lt=m(),Ie=r("p"),rs=l("Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),xt=m(),R=r("h3"),as=l("523 Numerical Analysis and Computing"),Bt=m(),Te=r("p"),ns=l("Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),Ft=m(),$=r("h3"),ls=l("524 Numerical Analysis and Computing"),qt=m(),De=r("p"),ps=l("Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),jt=m(),U=r("h3"),ms=l("526 Bioinformatics"),Mt=m(),Ne=r("p"),us=l("Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),zt=m(),Q=r("h3"),cs=l("529 Artificial Intelligence"),Ot=m(),Le=r("p"),fs=l("Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),Gt=m(),X=r("h3"),ds=l("539 Introduction to Compiler Design"),Wt=m(),xe=r("p"),ys=l("Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Jt=m(),Z=r("h3"),hs=l("540 Human-Computer Interface Development"),Rt=m(),Be=r("p"),vs=l("Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),$t=m(),K=r("h3"),ws=l("550 Combinatorics on Words"),Ut=m(),Fe=r("p"),bs=l("Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),Qt=m(),V=r("h3"),_s=l("553 Theory of Computation"),Xt=m(),qe=r("p"),gs=l("Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Zt=m(),Y=r("h3"),Es=l("555 Algorithm Analysis and Design"),Kt=m(),je=r("p"),Cs=l("Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Vt=m(),ee=r("h3"),Ps=l("561 Principles of Computer Architecture"),Yt=m(),Me=r("p"),Ss=l("Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),ei=m(),te=r("h3"),As=l("562 Principles of Operating Systems"),ti=m(),ze=r("p"),Hs=l("Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),ii=m(),ie=r("h3"),ks=l("567 Principles of Computer Networks"),si=m(),Oe=r("p"),Is=l("Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),oi=m(),se=r("h3"),Ts=l("568 Principles of Wireless Networks"),ri=m(),Ge=r("p"),Ds=l("Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),ai=m(),oe=r("h3"),Ns=l("580 Cryptography and Security in Computing"),ni=m(),We=r("p"),Ls=l("Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),li=m(),re=r("h3"),xs=l("583 Firewall Architecture and Computer Security"),pi=m(),Je=r("p"),Bs=l("Firewall hardware and software technologies. Architectures, protocols and their applications."),this.h()},l(e){f=a(e,"P",{});var i=n(f);v=p(i,`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my university,
the University of North Carolina at Greensboro. I have organized them by course
content, as some courses use similar tools/methods. Also note that some courses
are designed to teach specific software, outside of the browser, so I have
placed them under the topic "Outside the Browser"`),i.forEach(t),w=u(e),h=a(e,"H2",{id:!0});var zs=n(h);d=p(zs,"General Programming Courses"),zs.forEach(t),y=u(e),b=a(e,"H2",{id:!0});var Os=n(b);mi=p(Os,"Graphics"),Os.forEach(t),$e=u(e),g=a(e,"H2",{id:!0});var Gs=n(g);ui=p(Gs,"Algorithms"),Gs.forEach(t),Ue=u(e),E=a(e,"H3",{id:!0});var Ws=n(E);ci=p(Ws,"230 Elementary Data Structures and Algorithms"),Ws.forEach(t),Qe=u(e),ne=a(e,"P",{});var Js=n(ne);fi=p(Js,`Advanced syntax of high level language taught in CSC 130. Emphasis on
modularization and abstraction. Big-O analysis of algorithms. Design and use of
abstract data types with various implementations.`),Js.forEach(t),Xe=u(e),C=a(e,"H2",{id:!0});var Rs=n(C);di=p(Rs,"Networking"),Rs.forEach(t),Ze=u(e),P=a(e,"H2",{id:!0});var $s=n(P);yi=p($s,"Math-Based Courses"),$s.forEach(t),Ke=u(e),S=a(e,"H3",{id:!0});var Us=n(S);hi=p(Us,"250 Foundations of Computer Science I"),Us.forEach(t),Ve=u(e),le=a(e,"P",{});var Qs=n(le);vi=p(Qs,`An introduction to the fundamental ideas underlying contemporary computer
science with a focus on the computation and construction of objects.`),Qs.forEach(t),Ye=u(e),A=a(e,"H2",{id:!0});var Xs=n(A);wi=p(Xs,"Hardware"),Xs.forEach(t),et=u(e),pe=a(e,"P",{});var Zs=n(pe);bi=p(Zs,"These classes are designed to teach specific hardware concepts"),Zs.forEach(t),tt=u(e),H=a(e,"H3",{id:!0});var Ks=n(H);_i=p(Ks,"261 Computer Organization and Assembly Language"),Ks.forEach(t),it=u(e),me=a(e,"P",{});var Vs=n(me);gi=p(Vs,`CPU, memory, I/O devices, digital logic design, psw. Number representations
and machine language. Assembly language instruction types, registers,
addressing, arithmetic, instruction format, opcodes, pseudo-opcodes, assembler
directives, system calls, and macros.`),Vs.forEach(t),st=u(e),ue=a(e,"P",{});var Ys=n(ue);Ei=p(Ys,`Many would think this class would be difficult to do in the browser, but there
are many assembly interpreters written in JavaScript. Â Here are a few online
interpreters of interest for this classJS:`),Ys.forEach(t),ot=u(e),_=a(e,"UL",{});var Re=n(_);ce=a(Re,"LI",{});var Fs=n(ce);k=a(Fs,"A",{href:!0,title:!0});var eo=n(k);Ci=p(eo,"JSAssembly"),eo.forEach(t),Pi=p(Fs," - an interpeter for x86 assembly codes"),Fs.forEach(t),Si=u(Re),fe=a(Re,"LI",{});var qs=n(fe);I=a(qs,"A",{href:!0,title:!0});var to=n(I);Ai=p(to,"JSNES"),to.forEach(t),Hi=p(qs," - Great working interpreter for SNES ROM images"),qs.forEach(t),ki=u(Re),de=a(Re,"LI",{});var js=n(de);T=a(js,"A",{href:!0,title:!0});var io=n(T);Ii=p(io,"6502asm"),io.forEach(t),Ti=p(js," - 6502 assembly code interpreter"),js.forEach(t),Re.forEach(t),rt=u(e),ye=a(e,"P",{});var so=n(ye);Di=p(so,`I did not find any online SPARC interpreters, as UNCG teaches this course in
SPARC assembly, but it would be trivial to modify one of the above to suit.`),so.forEach(t),at=u(e),D=a(e,"H2",{id:!0});var oo=n(D);Ni=p(oo,"Outside the Browser"),oo.forEach(t),nt=u(e),he=a(e,"P",{});var ro=n(he);Li=p(ro,"These courses are designed to teach specific software, and"),ro.forEach(t),lt=u(e),N=a(e,"H3",{id:!0});var ao=n(N);xi=p(ao,"330 Advanced Data Structures"),ao.forEach(t),pt=u(e),ve=a(e,"P",{});var no=n(ve);Bi=p(no,"Static and dynamic data structures emphasizing binary trees and graphs. Advanced programming techniques. Advanced sorting and searching algorithms. Hashing techniques. Performance analysis. Methods of developing large applications programs."),no.forEach(t),mt=u(e),L=a(e,"H3",{id:!0});var lo=n(L);Fi=p(lo,"339 Concepts of Programming Languages"),lo.forEach(t),ut=u(e),we=a(e,"P",{});var po=n(we);qi=p(po,"Concepts of block-structured, object-oriented, functional, logic, and concurrent programming languages. Comparative study of syntactic and semantic features of these languages and writing programs using them."),po.forEach(t),ct=u(e),x=a(e,"H3",{id:!0});var mo=n(x);ji=p(mo,"340 Software Engineering"),mo.forEach(t),ft=u(e),be=a(e,"P",{});var uo=n(be);Mi=p(uo,"Practical and theoretical concepts of software engineering."),uo.forEach(t),dt=u(e),B=a(e,"H3",{id:!0});var co=n(B);zi=p(co,"350 Foundations of Computer Science II"),co.forEach(t),yt=u(e),_e=a(e,"P",{});var fo=n(_e);Oi=p(fo,"High level concepts in the theoretical foundations of computer science."),fo.forEach(t),ht=u(e),F=a(e,"H3",{id:!0});var yo=n(F);Gi=p(yo,"463 Basic Systems Administration Laboratory"),yo.forEach(t),vt=u(e),ge=a(e,"P",{});var ho=n(ge);Wi=p(ho,"Installing operating systems, peripherals, hardware, and software. Backups, recompiling the kernel (loading/unloading modules), providing Web services, and user administration. (Formerly CSC 563)"),ho.forEach(t),wt=u(e),q=a(e,"H3",{id:!0});var vo=n(q);Ji=p(vo,"464 Intermediate Systems Administration Laboratory"),vo.forEach(t),bt=u(e),Ee=a(e,"P",{});var wo=n(Ee);Ri=p(wo,"Topics selected from routing, firewall, Primary Domain Controller, Backup Domain Controller, Domain Controller trust, SAMBA, DNS round robin, and PPP connectivity setup. (Formerly CSC 564)"),wo.forEach(t),_t=u(e),j=a(e,"H3",{id:!0});var bo=n(j);$i=p(bo,"465 Advanced Systems Administration Laboratory"),bo.forEach(t),gt=u(e),Ce=a(e,"P",{});var _o=n(Ce);Ui=p(_o,"Automated installation, software installation, systems programming, system administration in a large organization. Projects will include departmental or university computer system work. (Formerly CSC 565)"),_o.forEach(t),Et=u(e),M=a(e,"H3",{id:!0});var go=n(M);Qi=p(go,"471 Principles of Database Systems"),go.forEach(t),Ct=u(e),Pe=a(e,"P",{});var Eo=n(Pe);Xi=p(Eo,"Contemporary database systems. Emphasis on query processing, design, and implementation of applications in relational (SQL) databases. Introduction to other database models such as XML, object-oriented, and deductive."),Eo.forEach(t),Pt=u(e),z=a(e,"H3",{id:!0});var Co=n(z);Zi=p(Co,"490 Senior Project"),Co.forEach(t),St=u(e),Se=a(e,"P",{});var Po=n(Se);Ki=p(Po,"Application of classroom knowledge and skills in computer science to solve real-world problems and to develop research and development skills."),Po.forEach(t),At=u(e),O=a(e,"H3",{id:!0});var So=n(O);Vi=p(So,"493 Honors Work in Computer Science"),So.forEach(t),Ht=u(e),Ae=a(e,"P",{});var Ao=n(Ae);Yi=p(Ao,"Research in a topic of special interest at the Honors level."),Ao.forEach(t),kt=u(e),G=a(e,"H3",{id:!0});var Ho=n(G);es=p(Ho,"495 Selected Topics in Computer Science"),Ho.forEach(t),It=u(e),He=a(e,"P",{});var ko=n(He);ts=p(ko,`May be repeated for credit for a total of 6 s.h. when topic of study changes.
A topic of special interest is studied in depth.`),ko.forEach(t),Tt=u(e),W=a(e,"H3",{id:!0});var Io=n(W);is=p(Io,"521 Computer Graphics"),Io.forEach(t),Dt=u(e),ke=a(e,"P",{});var To=n(ke);ss=p(To,"Survey of graphics algorithms, data structures, and techniques."),To.forEach(t),Nt=u(e),J=a(e,"H3",{id:!0});var Do=n(J);os=p(Do,"522 Digital Image Processing"),Do.forEach(t),Lt=u(e),Ie=a(e,"P",{});var No=n(Ie);rs=p(No,"Image representation, enhancement, compression, coding, restoration, and wavelet transforms."),No.forEach(t),xt=u(e),R=a(e,"H3",{id:!0});var Lo=n(R);as=p(Lo,"523 Numerical Analysis and Computing"),Lo.forEach(t),Bt=u(e),Te=a(e,"P",{});var xo=n(Te);ns=p(xo,"Number systems and errors, solutions of non-linear and linear systems, eigenvalue problems, interpolation and approximation, numerical differentiation and integration, solution of differential equations."),xo.forEach(t),Ft=u(e),$=a(e,"H3",{id:!0});var Bo=n($);ls=p(Bo,"524 Numerical Analysis and Computing"),Bo.forEach(t),qt=u(e),De=a(e,"P",{});var Fo=n(De);ps=p(Fo,"Continuation of 523 with special topics in numerical analysis, emphasis on applied mathematics."),Fo.forEach(t),jt=u(e),U=a(e,"H3",{id:!0});var qo=n(U);ms=p(qo,"526 Bioinformatics"),qo.forEach(t),Mt=u(e),Ne=a(e,"P",{});var jo=n(Ne);us=p(jo,"Introduction to the problems and methods in Bioinformatics. Problem areas include restriction mapping, map assembly, sequencing, DNA arrays, and sequence comparison."),jo.forEach(t),zt=u(e),Q=a(e,"H3",{id:!0});var Mo=n(Q);cs=p(Mo,"529 Artificial Intelligence"),Mo.forEach(t),Ot=u(e),Le=a(e,"P",{});var zo=n(Le);fs=p(zo,"Logical foundations, knowledge representation and reasoning, search, and selected topics such as natural language processing and reasoning under uncertainty."),zo.forEach(t),Gt=u(e),X=a(e,"H3",{id:!0});var Oo=n(X);ds=p(Oo,"539 Introduction to Compiler Design"),Oo.forEach(t),Wt=u(e),xe=a(e,"P",{});var Go=n(xe);ys=p(Go,"Basic techniques of compiler design and implementation: lexical analysis, parsing, code generation. Sizable programming project implementing a compiler for a block-structured language with strong typing."),Go.forEach(t),Jt=u(e),Z=a(e,"H3",{id:!0});var Wo=n(Z);hs=p(Wo,"540 Human-Computer Interface Development"),Wo.forEach(t),Rt=u(e),Be=a(e,"P",{});var Jo=n(Be);vs=p(Jo,"Survey of concepts and techniques for human-computer interface development. Topics include user-centered design, user interface programming, and usability evaluation."),Jo.forEach(t),$t=u(e),K=a(e,"H3",{id:!0});var Ro=n(K);ws=p(Ro,"550 Combinatorics on Words"),Ro.forEach(t),Ut=u(e),Fe=a(e,"P",{});var $o=n(Fe);bs=p($o,"Introduction to the problems and methods in algorithmic combinatorics on words. Problem areas include periodicity, primitivity, and borderedness."),$o.forEach(t),Qt=u(e),V=a(e,"H3",{id:!0});var Uo=n(V);_s=p(Uo,"553 Theory of Computation"),Uo.forEach(t),Xt=u(e),qe=a(e,"P",{});var Qo=n(qe);gs=p(Qo,"Finite state automata and regular expressions, context-free grammars, push-down automata and their use in parsing, overview of language translation systems, models for programming language semantics, computability and undecidability."),Qo.forEach(t),Zt=u(e),Y=a(e,"H3",{id:!0});var Xo=n(Y);Es=p(Xo,"555 Algorithm Analysis and Design"),Xo.forEach(t),Kt=u(e),je=a(e,"P",{});var Zo=n(je);Cs=p(Zo,"Sequential algorithm design and complexity analysis. Dynamic programming. Greedy algorithms. Graph algorithms. Selected advanced topics from NP-completeness; approximation, randomized, parallel, number-theoretic algorithms; Fast Fourier Transform; computational geometry; string matching."),Zo.forEach(t),Vt=u(e),ee=a(e,"H3",{id:!0});var Ko=n(ee);Ps=p(Ko,"561 Principles of Computer Architecture"),Ko.forEach(t),Yt=u(e),Me=a(e,"P",{});var Vo=n(Me);Ss=p(Vo,"Hardware and software components of computer systems, their organization and operations. Topics: comparative instruction set architectures, microprogramming, memory management, processor management, I/O, interrupts, and emulation of processors."),Vo.forEach(t),ei=u(e),te=a(e,"H3",{id:!0});var Yo=n(te);As=p(Yo,"562 Principles of Operating Systems"),Yo.forEach(t),ti=u(e),ze=a(e,"P",{});var er=n(ze);Hs=p(er,"Techniques and strategies used in operating system design and implementation: managing processes, input/output, memory, scheduling, file systems, and protection."),er.forEach(t),ii=u(e),ie=a(e,"H3",{id:!0});var tr=n(ie);ks=p(tr,"567 Principles of Computer Networks"),tr.forEach(t),si=u(e),Oe=a(e,"P",{});var ir=n(Oe);Is=p(ir,"Hardware and software components of computer networks, their organization and operations. Topics: open system interconnection; local area networks; TCP/IP internetworking, routing, and packet switching; network programming."),ir.forEach(t),oi=u(e),se=a(e,"H3",{id:!0});var sr=n(se);Ts=p(sr,"568 Principles of Wireless Networks"),sr.forEach(t),ri=u(e),Ge=a(e,"P",{});var or=n(Ge);Ds=p(or,"Digitial communications, Communication networks, wireless communication technology, wireless networking, wireless LANs and wireless network programming."),or.forEach(t),ai=u(e),oe=a(e,"H3",{id:!0});var rr=n(oe);Ns=p(rr,"580 Cryptography and Security in Computing"),rr.forEach(t),ni=u(e),We=a(e,"P",{});var ar=n(We);Ls=p(ar,"Modern development of cryptography and secure encryption protocols. Program security and viruses. Operating system protection. Network and distributed system security. Database security. Administering security."),ar.forEach(t),li=u(e),re=a(e,"H3",{id:!0});var nr=n(re);xs=p(nr,"583 Firewall Architecture and Computer Security"),nr.forEach(t),pi=u(e),Je=a(e,"P",{});var lr=n(Je);Bs=p(lr,"Firewall hardware and software technologies. Architectures, protocols and their applications."),lr.forEach(t),this.h()},h(){c(h,"id","general-programming-courses"),c(b,"id","graphics"),c(g,"id","algorithms"),c(E,"id","230-elementary-data-structures-and-algorithms"),c(C,"id","networking"),c(P,"id","math-based-courses"),c(S,"id","250-foundations-of-computer-science-i"),c(A,"id","hardware"),c(H,"id","261-computer-organization-and-assembly-language"),c(k,"href","http://http://timhatch.com/projects/jsassembly/"),c(k,"title",""),c(I,"href","http://benfirshman.com/projects/jsnes/"),c(I,"title",""),c(T,"href","http://6502asm.com/"),c(T,"title",""),c(D,"id","outside-the-browser"),c(N,"id","330-advanced-data-structures"),c(L,"id","339-concepts-of-programming-languages"),c(x,"id","340-software-engineering"),c(B,"id","350-foundations-of-computer-science-ii"),c(F,"id","463-basic-systems-administration-laboratory"),c(q,"id","464-intermediate-systems-administration-laboratory"),c(j,"id","465-advanced-systems-administration-laboratory"),c(M,"id","471-principles-of-database-systems"),c(z,"id","490-senior-project"),c(O,"id","493-honors-work-in-computer-science"),c(G,"id","495-selected-topics-in-computer-science"),c(W,"id","521-computer-graphics"),c(J,"id","522-digital-image-processing"),c(R,"id","523-numerical-analysis-and-computing"),c($,"id","524-numerical-analysis-and-computing"),c(U,"id","526-bioinformatics"),c(Q,"id","529-artificial-intelligence"),c(X,"id","539-introduction-to-compiler-design"),c(Z,"id","540-human-computer-interface-development"),c(K,"id","550-combinatorics-on-words"),c(V,"id","553-theory-of-computation"),c(Y,"id","555-algorithm-analysis-and-design"),c(ee,"id","561-principles-of-computer-architecture"),c(te,"id","562-principles-of-operating-systems"),c(ie,"id","567-principles-of-computer-networks"),c(se,"id","568-principles-of-wireless-networks"),c(oe,"id","580-cryptography-and-security-in-computing"),c(re,"id","583-firewall-architecture-and-computer-security")},m(e,i){s(e,f,i),o(f,v),s(e,w,i),s(e,h,i),o(h,d),s(e,y,i),s(e,b,i),o(b,mi),s(e,$e,i),s(e,g,i),o(g,ui),s(e,Ue,i),s(e,E,i),o(E,ci),s(e,Qe,i),s(e,ne,i),o(ne,fi),s(e,Xe,i),s(e,C,i),o(C,di),s(e,Ze,i),s(e,P,i),o(P,yi),s(e,Ke,i),s(e,S,i),o(S,hi),s(e,Ve,i),s(e,le,i),o(le,vi),s(e,Ye,i),s(e,A,i),o(A,wi),s(e,et,i),s(e,pe,i),o(pe,bi),s(e,tt,i),s(e,H,i),o(H,_i),s(e,it,i),s(e,me,i),o(me,gi),s(e,st,i),s(e,ue,i),o(ue,Ei),s(e,ot,i),s(e,_,i),o(_,ce),o(ce,k),o(k,Ci),o(ce,Pi),o(_,Si),o(_,fe),o(fe,I),o(I,Ai),o(fe,Hi),o(_,ki),o(_,de),o(de,T),o(T,Ii),o(de,Ti),s(e,rt,i),s(e,ye,i),o(ye,Di),s(e,at,i),s(e,D,i),o(D,Ni),s(e,nt,i),s(e,he,i),o(he,Li),s(e,lt,i),s(e,N,i),o(N,xi),s(e,pt,i),s(e,ve,i),o(ve,Bi),s(e,mt,i),s(e,L,i),o(L,Fi),s(e,ut,i),s(e,we,i),o(we,qi),s(e,ct,i),s(e,x,i),o(x,ji),s(e,ft,i),s(e,be,i),o(be,Mi),s(e,dt,i),s(e,B,i),o(B,zi),s(e,yt,i),s(e,_e,i),o(_e,Oi),s(e,ht,i),s(e,F,i),o(F,Gi),s(e,vt,i),s(e,ge,i),o(ge,Wi),s(e,wt,i),s(e,q,i),o(q,Ji),s(e,bt,i),s(e,Ee,i),o(Ee,Ri),s(e,_t,i),s(e,j,i),o(j,$i),s(e,gt,i),s(e,Ce,i),o(Ce,Ui),s(e,Et,i),s(e,M,i),o(M,Qi),s(e,Ct,i),s(e,Pe,i),o(Pe,Xi),s(e,Pt,i),s(e,z,i),o(z,Zi),s(e,St,i),s(e,Se,i),o(Se,Ki),s(e,At,i),s(e,O,i),o(O,Vi),s(e,Ht,i),s(e,Ae,i),o(Ae,Yi),s(e,kt,i),s(e,G,i),o(G,es),s(e,It,i),s(e,He,i),o(He,ts),s(e,Tt,i),s(e,W,i),o(W,is),s(e,Dt,i),s(e,ke,i),o(ke,ss),s(e,Nt,i),s(e,J,i),o(J,os),s(e,Lt,i),s(e,Ie,i),o(Ie,rs),s(e,xt,i),s(e,R,i),o(R,as),s(e,Bt,i),s(e,Te,i),o(Te,ns),s(e,Ft,i),s(e,$,i),o($,ls),s(e,qt,i),s(e,De,i),o(De,ps),s(e,jt,i),s(e,U,i),o(U,ms),s(e,Mt,i),s(e,Ne,i),o(Ne,us),s(e,zt,i),s(e,Q,i),o(Q,cs),s(e,Ot,i),s(e,Le,i),o(Le,fs),s(e,Gt,i),s(e,X,i),o(X,ds),s(e,Wt,i),s(e,xe,i),o(xe,ys),s(e,Jt,i),s(e,Z,i),o(Z,hs),s(e,Rt,i),s(e,Be,i),o(Be,vs),s(e,$t,i),s(e,K,i),o(K,ws),s(e,Ut,i),s(e,Fe,i),o(Fe,bs),s(e,Qt,i),s(e,V,i),o(V,_s),s(e,Xt,i),s(e,qe,i),o(qe,gs),s(e,Zt,i),s(e,Y,i),o(Y,Es),s(e,Kt,i),s(e,je,i),o(je,Cs),s(e,Vt,i),s(e,ee,i),o(ee,Ps),s(e,Yt,i),s(e,Me,i),o(Me,Ss),s(e,ei,i),s(e,te,i),o(te,As),s(e,ti,i),s(e,ze,i),o(ze,Hs),s(e,ii,i),s(e,ie,i),o(ie,ks),s(e,si,i),s(e,Oe,i),o(Oe,Is),s(e,oi,i),s(e,se,i),o(se,Ts),s(e,ri,i),s(e,Ge,i),o(Ge,Ds),s(e,ai,i),s(e,oe,i),o(oe,Ns),s(e,ni,i),s(e,We,i),o(We,Ls),s(e,li,i),s(e,re,i),o(re,xs),s(e,pi,i),s(e,Je,i),o(Je,Bs)},p:Er,d(e){e&&t(f),e&&t(w),e&&t(h),e&&t(y),e&&t(b),e&&t($e),e&&t(g),e&&t(Ue),e&&t(E),e&&t(Qe),e&&t(ne),e&&t(Xe),e&&t(C),e&&t(Ze),e&&t(P),e&&t(Ke),e&&t(S),e&&t(Ve),e&&t(le),e&&t(Ye),e&&t(A),e&&t(et),e&&t(pe),e&&t(tt),e&&t(H),e&&t(it),e&&t(me),e&&t(st),e&&t(ue),e&&t(ot),e&&t(_),e&&t(rt),e&&t(ye),e&&t(at),e&&t(D),e&&t(nt),e&&t(he),e&&t(lt),e&&t(N),e&&t(pt),e&&t(ve),e&&t(mt),e&&t(L),e&&t(ut),e&&t(we),e&&t(ct),e&&t(x),e&&t(ft),e&&t(be),e&&t(dt),e&&t(B),e&&t(yt),e&&t(_e),e&&t(ht),e&&t(F),e&&t(vt),e&&t(ge),e&&t(wt),e&&t(q),e&&t(bt),e&&t(Ee),e&&t(_t),e&&t(j),e&&t(gt),e&&t(Ce),e&&t(Et),e&&t(M),e&&t(Ct),e&&t(Pe),e&&t(Pt),e&&t(z),e&&t(St),e&&t(Se),e&&t(At),e&&t(O),e&&t(Ht),e&&t(Ae),e&&t(kt),e&&t(G),e&&t(It),e&&t(He),e&&t(Tt),e&&t(W),e&&t(Dt),e&&t(ke),e&&t(Nt),e&&t(J),e&&t(Lt),e&&t(Ie),e&&t(xt),e&&t(R),e&&t(Bt),e&&t(Te),e&&t(Ft),e&&t($),e&&t(qt),e&&t(De),e&&t(jt),e&&t(U),e&&t(Mt),e&&t(Ne),e&&t(zt),e&&t(Q),e&&t(Ot),e&&t(Le),e&&t(Gt),e&&t(X),e&&t(Wt),e&&t(xe),e&&t(Jt),e&&t(Z),e&&t(Rt),e&&t(Be),e&&t($t),e&&t(K),e&&t(Ut),e&&t(Fe),e&&t(Qt),e&&t(V),e&&t(Xt),e&&t(qe),e&&t(Zt),e&&t(Y),e&&t(Kt),e&&t(je),e&&t(Vt),e&&t(ee),e&&t(Yt),e&&t(Me),e&&t(ei),e&&t(te),e&&t(ti),e&&t(ze),e&&t(ii),e&&t(ie),e&&t(si),e&&t(Oe),e&&t(oi),e&&t(se),e&&t(ri),e&&t(Ge),e&&t(ai),e&&t(oe),e&&t(ni),e&&t(We),e&&t(li),e&&t(re),e&&t(pi),e&&t(Je)}}}function Sr(ae){let f,v;const w=[ae[0],ur];let h={$$slots:{default:[Pr]},$$scope:{ctx:ae}};for(let d=0;d<w.length;d+=1)h=Ms(h,w[d]);return f=new Cr({props:h}),{c(){yr(f.$$.fragment)},l(d){hr(f.$$.fragment,d)},m(d,y){vr(f,d,y),v=!0},p(d,[y]){const b=y&1?wr(w,[y&1&&pr(d[0]),y&0&&pr(ur)]):{};y&2&&(b.$$scope={dirty:y,ctx:d}),f.$set(b)},i(d){v||(br(f.$$.fragment,d),v=!0)},o(d){_r(f.$$.fragment,d),v=!1},d(d){gr(f,d)}}}const ur={comments:!0,view:"post",layout:"post",lang:"en",author:"skamansam",title:"Teaching Computer Science in a Web Browser?",description:"Ideas on how to teach CSC courses using only a web browser",excerpt:null,cover:!1,coverImage:!1,coverAlt:"RBE Logo",categories:["programming"],tags:["Education","Online Education"],created_at:"2010-06-02T21:48:00.000Z",updated_at:"2010-06-02T21:48:00.000Z",preview:`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the...`,previewHtml:"<p>With the web becoming more pervasive and HTML5 threatening to annihilate Flash, is JavaScript becoming a viable language for teaching advanced topics in computer science? Here is a run-down of topics and projects that could be used to teach the cours...</p>",textContent:`With the web becoming more pervasive and HTML5 threatening to annihilate Flash,
is JavaScript becoming a viable language for teaching advanced topics in
computer science? Here is a run-down of topics and projects that could be used
to teach the courses. The following course listing is taken from my...`};function Ar(ae,f,v){return ae.$$set=w=>{v(0,f=Ms(Ms({},f),mr(w)))},f=mr(f),[f]}class Ir extends cr{constructor(f){super(),fr(this,f,Ar,Sr,dr,{})}}export{Ir as default,ur as metadata};
