{"version":3,"sources":["webpack:///src/.vuepress/theme/components/lazy/load-img.vue","webpack:///./src/.vuepress/theme/components/lazy/load-img.vue?f71c","webpack:///./node_modules/get-youtube-id/index.js","webpack:///./src/.vuepress/theme/components/lazy/load-img.vue","webpack:///./src/.vuepress/theme/components/lazy/load-img.vue?bba6","webpack:///./src/.vuepress/theme/components/lazy/load-img.vue?4207","webpack:///./src/.vuepress/theme/components/lazy/mixin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAKA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,yBAAyB;AAClH;;;;;;;;;;;;;;ACAA;AACA,MAAM,IAA2B;AACjC;AACA,GAAG,MAAM,EAIN;AACH,CAAC;;AAED;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;AACA;AACA,8BAA8B,GAAG;AACjC,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,0BAA0B,GAAG;AAC7B,wBAAwB,GAAG;AAC3B;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,yBAAyB,GAAG;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAAA;AAAuF;AAC3B;AACL;;;AAGvD;AACmG;AACnG,gBAAgB,2GAAU;AAC1B,EAAE,8EAAM;AACR,EAAE,mFAAM;AACR,EAAE,4FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;AClBf;AAAA;AAAA,wCAAmM,CAAgB,mPAAG,EAAC,C;;;;;;;;;;;;ACAvN;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACCyC;;AAE1B;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,iBAAiB,qDAAY;AAC7B,8CAA8C,GAAG;AACjD;AACA;AACA,CAAC","file":"assets/js/23.c43a03ba.js","sourcesContent":["<template>\n  <img v-bind=\"getAttributes\" />\n</template>\n\n<script>\n  import LoadDataMixin from './mixin'\n\n  export default {\n    name: 'LazyLoadImage',\n\n    mixins: [LoadDataMixin],\n\n    data () {\n      return {\n        default: {\n          class: 'lazy-load-image',\n          src: '',\n          alt: ''\n        }\n      }\n    }\n  }\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('img',_vm._b({},'img',_vm.getAttributes,false))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.getYouTubeID = factory();\n  }\n}(this, function (exports) {\n\n  return function (url, opts) {\n    if (opts == undefined) {\n      opts = {fuzzy: true};\n    }\n\n    if (/youtu\\.?be/.test(url)) {\n\n      // Look first for known patterns\n      var i;\n      var patterns = [\n        /youtu\\.be\\/([^#\\&\\?]{11})/,  // youtu.be/<id>\n        /\\?v=([^#\\&\\?]{11})/,         // ?v=<id>\n        /\\&v=([^#\\&\\?]{11})/,         // &v=<id>\n        /embed\\/([^#\\&\\?]{11})/,      // embed/<id>\n        /\\/v\\/([^#\\&\\?]{11})/         // /v/<id>\n      ];\n\n      // If any pattern matches, return the ID\n      for (i = 0; i < patterns.length; ++i) {\n        if (patterns[i].test(url)) {\n          return patterns[i].exec(url)[1];\n        }\n      }\n\n      if (opts.fuzzy) {\n        // If that fails, break it apart by certain characters and look \n        // for the 11 character key\n        var tokens = url.split(/[\\/\\&\\?=#\\.\\s]/g);\n        for (i = 0; i < tokens.length; ++i) {\n          if (/^[^#\\&\\?]{11}$/.test(tokens[i])) {\n            return tokens[i];\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n}));\n","import { render, staticRenderFns } from \"./load-img.vue?vue&type=template&id=1c457621&\"\nimport script from \"./load-img.vue?vue&type=script&lang=js&\"\nexport * from \"./load-img.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./load-img.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./load-img.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"3cbb318b-vue-loader-template\\\"}!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./load-img.vue?vue&type=template&id=1c457621&\"","\nimport getYouTubeID from 'get-youtube-id'\n\nexport default {\n  props: {\n    tag: String,\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n\n  computed: {\n    getAttributes () {\n      const data = { ...this.default, ...this.data }\n      data.src = this.youtubeEmbed(data.src) || data.src\n      return data\n    }\n  },\n\n  methods: {\n    youtubeEmbed (src) {\n      if (!src.includes('youtube.com') || this.tag !== 'iframe') return false\n      const id = getYouTubeID(src)\n      return `https://www.youtube.com/embed/${id}`\n    }\n  }\n}\n"],"sourceRoot":""}